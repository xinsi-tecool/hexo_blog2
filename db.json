{"meta":{"version":1,"warehouse":"5.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"source/admin/config.yml","path":"admin/config.yml","modified":1,"renderable":0},{"_id":"source/admin/index.html","path":"admin/index.html","modified":1,"renderable":0},{"_id":"source/images/404.svg","path":"images/404.svg","modified":1,"renderable":0},{"_id":"source/images/WX-gzh.jpg","path":"images/WX-gzh.jpg","modified":1,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":0},{"_id":"source/images/bg.svg","path":"images/bg.svg","modified":1,"renderable":0},{"_id":"source/images/bg1.svg","path":"images/bg1.svg","modified":1,"renderable":0},{"_id":"source/images/bg2.svg","path":"images/bg2.svg","modified":1,"renderable":0},{"_id":"source/images/bg2_dark.svg","path":"images/bg2_dark.svg","modified":1,"renderable":0},{"_id":"source/images/blurry-gradient-haikei.svg","path":"images/blurry-gradient-haikei.svg","modified":1,"renderable":0},{"_id":"source/images/bilibili.png","path":"images/bilibili.png","modified":1,"renderable":0},{"_id":"source/images/cool-background.svg","path":"images/cool-background.svg","modified":1,"renderable":0},{"_id":"source/images/default_cover.png","path":"images/default_cover.png","modified":1,"renderable":0},{"_id":"source/images/douyin.png","path":"images/douyin.png","modified":1,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":0},{"_id":"source/images/reward.svg","path":"images/reward.svg","modified":1,"renderable":0},{"_id":"source/images/reward_wx.png","path":"images/reward_wx.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_data/icons.yml","hash":"9603addf93fc1c60c1f1004afd358d2671fce6bb","modified":1703657586000},{"_id":"source/_data/link.yml","hash":"a5cf048ee286d2b61ef867046a7325629ff7d5f9","modified":1705321730000},{"_id":"source/_posts/hexo_github_netlify.md","hash":"08bdf99dfcfd54266e997cf8df051cce1ed2cebf","modified":1705113528000},{"_id":"source/_posts/利用github给博客搭建一个图床.md","hash":"7b05663e1dc2e611036c0c4b04ab4ee9a733f566","modified":1705309476000},{"_id":"source/_posts/关于Docker的使用.md","hash":"65d7c1584639d0c81ef8b2ea3a925c27dcec4a97","modified":1705114112000},{"_id":"source/_posts/添加cms.md","hash":"a472fe0683a6eab6e6ed9e9f0ccbdaf189dc3214","modified":1705113548000},{"_id":"source/admin/config.yml","hash":"f2a346d83f0bfb4a31c3072763484bc50fd28fba","modified":1705309360000},{"_id":"source/admin/index.html","hash":"34eb48b6e5bb0f367557643e5d275e36e11afc06","modified":1704973182000},{"_id":"source/about/index.md","hash":"66b4f208c139ba58490ac3241a58c0eb92f7bb55","modified":1705327266000},{"_id":"source/categories/index.md","hash":"f778f676356826f48db274b9043caea9d25cb97a","modified":1705327266000},{"_id":"source/css/butterfly.css","hash":"b57d1d54364046c6ded8208280278dda5f56c056","modified":1705329590000},{"_id":"source/css/custom1.css","hash":"94978a58c6dafa81617d057c199d7195e0f74457","modified":1705057512000},{"_id":"source/images/WX-gzh.jpg","hash":"34bc8ea63632b4c5c83a0dc7c96625008454d13e","modified":1703656692000},{"_id":"source/images/bg.svg","hash":"b47070e9c38581cfb95f3e1327a860d84abe8729","modified":1703591506000},{"_id":"source/images/bg2_dark.svg","hash":"06e1f25626494eba5d0bb4bf0065ee8e56f8aa42","modified":1703592472000},{"_id":"source/images/bg2.svg","hash":"7c2f1ecb34239c17d910b5ad11966c53cd16c8ca","modified":1703592312000},{"_id":"source/images/bg1.svg","hash":"6eb0c2d08f8b661ecdec3178b1e4c6ccbf9fa011","modified":1703591588000},{"_id":"source/images/blurry-gradient-haikei.svg","hash":"637837c0df6fd6770baba8f8b1ba5bd6933e3b2f","modified":1705131790000},{"_id":"source/images/cool-background.svg","hash":"789fb7d2e340a54340a873c0e3a58c9db3110b03","modified":1705330256000},{"_id":"source/images/favicon.ico","hash":"20dcf9d46e678cad6e31c0aa018da3ade9ed05b6","modified":1703570578000},{"_id":"source/images/reward.svg","hash":"6ca92d3ecde265f3ccf34d3f9446655770bfcc08","modified":1703593224000},{"_id":"source/links/index.md","hash":"3e7c1918388e265c2e03e96fb086b2972364e5c3","modified":1705321384000},{"_id":"source/tags/index.md","hash":"7a4927c535c7e4a7c9870f7ad50732d0a9653648","modified":1705327266000},{"_id":"source/images/404.svg","hash":"183ced6a9352fcddfe6ebe438533ffdec7bc565a","modified":1705123708000},{"_id":"source/images/bilibili.png","hash":"ca33fab6f79b873f0f84fb8c12b00a15726ce9da","modified":1703657426000},{"_id":"source/images/reward_wx.png","hash":"4d0f189693858b298158ad56765ca1a5886325ad","modified":1704979726000},{"_id":"source/images/douyin.png","hash":"01bcef137ece6a43de0d717c7df8df92853f6dcd","modified":1703657292000},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1705110502000},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"148da187d16033624ceccce8b8561835296f5a5a","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"39fbabbbf1e89dd82a6ea21517c6c24b49e4dd98","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"5aeca0522902fc5a9e5f92850143fae9585f0677","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/plugins.yml","hash":"1f8b5e0a533a59f91d760a5f96e61d81a8a9b7d2","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/.github/FUNDING.yml","hash":"da5e77f5e0cdb7e11b36546fb6796d10e3dfbe5d","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"5004faee365139521f161babd66649a8107e4008","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"6e34b565ea013812d5e363b6de5fa1f9078d4e12","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7b4831ae8f8f8c55dd1b856781210c517c63e6dd","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"ecec62305aaa596bb1dfbb46c13d06fb5a9628cf","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"db275f7fbe4438b54cd813b695f4834e10aa234f","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1705110504000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"e196a99733d7f90899bceed5d12488e8234817d5","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/merge_config.js","hash":"2ac43fd4103ba3c6897da7c13015cb05f39fd695","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"152b6bd4b6285165541a71f5a1c913f8ee6a602b","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1705110504000},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1705110504000},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"63fed4548367a3663cdbaffa1df48167b0a2397b","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"a5c7d362ae63474c1a4e3eb5cd09804b3684e984","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"50d1b08367f709e5416140043933e79cd8d77559","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_series.pug","hash":"bd5ad01277f8c6ddf8a3a29af1518e5fe6eed23f","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"a658a274c5f7896ee5122725bee45548693bdd66","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"f19694a42dbe28eda4b39a1696e8fbcd277bc76c","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"c8ff6ddd5bfe1190b7b8056b68ce41114fd79dcb","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"029eebbdcb3c682780d1de629fa06858cbe9782b","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"a2eb44fa5eaea1325319a2064439cf36d0f35a2f","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"b7a6a585dbc38d177c9aba75df3a467415d0488a","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"0db591a1f4ed5adcb8668a549bbee5c9d62682cf","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"e549d24ad81a7d93326a509ff8dcfcc58c80729e","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"d4ebc41b5c855dd75f47de7345d62f85ce7cf073","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"961589da3c0a532c4709a4a4ea96bd579257f766","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1705110504000},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1705110504000},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5c2bf7d7a4b9df3fb2794b0b32e96158f0de673f","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"894bf60ff5170cf1e4f276a8cedaf8301bceb824","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"9b70eea4b1ff083e2b8769493a5b5aea71a02318","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"9a3617f5e90c4e4176aa2ee2e904c22466e9663b","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"2609bc2656aaaa9b59e8d575e711776512a62192","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"4104f96faa6040f111ebfb9a90eeb470857c3b86","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"de2c4d02b520dd49a0a59fc0f33295e5bbb2c624","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0f0b46d637a9a1b6ae35148923abecc80b866276","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"1f9f51023e9e33081c2add2ca73643c0edc5e9d5","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"24804ab6da9727ed793655c1262fa3f1a9746f70","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1705110506000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1705110508000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1705110508000},{"_id":"source/images/default_cover.png","hash":"391359288e3b90b5dfc7659362959b82bf4d2628","modified":1705329856000},{"_id":"source/images/avatar.png","hash":"2014777d1f0088d8fc94ba7e74133841889b4fd3","modified":1703126924000}],"Category":[{"name":"hexo","_id":"clrf1or0n00038cfb5gwc68wq"},{"name":"技术","_id":"clrf1or1o000f8cfb5aziahz7"},{"name":"Docker","_id":"clrf1or1r000j8cfb1jg31yzp"}],"Data":[{"_id":"icons","data":{"gitee":{"svg":"<svg t=\"1703656950416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4205\" width=\"200\" height=\"200\"><path d=\"M512 1024C229.222 1024 0 794.778 0 512S229.222 0 512 0s512 229.222 512 512-229.222 512-512 512z m259.149-568.883h-290.74a25.293 25.293 0 0 0-25.292 25.293l-0.026 63.206c0 13.952 11.315 25.293 25.267 25.293h177.024c13.978 0 25.293 11.315 25.293 25.267v12.646a75.853 75.853 0 0 1-75.853 75.853h-240.23a25.293 25.293 0 0 1-25.267-25.293V417.203a75.853 75.853 0 0 1 75.827-75.853h353.946a25.293 25.293 0 0 0 25.267-25.292l0.077-63.207a25.293 25.293 0 0 0-25.268-25.293H417.152a189.62 189.62 0 0 0-189.62 189.645V771.15c0 13.977 11.316 25.293 25.294 25.293h372.94a170.65 170.65 0 0 0 170.65-170.65V480.384a25.293 25.293 0 0 0-25.293-25.267z\" fill=\"#C71D23\" p-id=\"4206\"></path></svg>","link":"https://gitee.com/imdl"}}},{"_id":"link","data":[{"class_name":"各种链接","class_desc":"我的开源网站","link_list":[{"name":"github","link":"https://github.com/rimdl/","avatar":"https://avatars.githubusercontent.com/u/57860092?v=4","descr":"我的开源仓库"},{"name":"gitee","link":"https://gitee.com/imdl","avatar":"https://foruda.gitee.com/avatar/1703561151502610349/7341530_imdl_1703561151.png!avatar200","descr":"我的gitee"}]},{"class_name":"我的开源项目","class_desc":"写的各种垃圾代码~","link_list":[{"name":"GitPic","link":"https://github.com/rimdl/GitPic/","avatar":"https://raw.gitmirror.com/xinsi-tecool/mypic/main/3f285542-bb28-4458-ac0a-25b349d2d41e.jpg","descr":"GitHub图床"},{"name":"QPDBot","link":"https://github.com/rimdl/QPDBot","avatar":"https://raw.gitmirror.com/xinsi-tecool/mypic/main/2e9fec99-d7b3-48f8-a125-7beb2da3c5f9.png","descr":"QQ频道可用的AI机器人"}]}]}],"Page":[{"title":"关于","date":"2023-12-26T11:42:58.000Z","top_img":"../images/bg2.svg","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2023-12-26 19:42:58\ntop_img: '../images/bg2.svg'\n---\n","updated":"2024-01-15T14:01:06.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"clrf1or0f00008cfbhl6o3avi","content":"","cover":"/images/cool-background.svg","cover_type":"img","excerpt":"","more":""},{"title":"分类","date":"2023-12-26T13:00:15.000Z","type":"categories","top_img":"../images/bg2.svg","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-12-26 21:00:15\ntype: \"categories\"\ntop_img: '../images/bg2.svg'\n---\n","updated":"2024-01-15T14:01:06.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clrf1or0m00028cfb5wogbq7f","content":"","cover":"/images/cool-background.svg","cover_type":"img","excerpt":"","more":""},{"_content":"@keyframes gradientBG {\n    0% {\n        background-position: 0% 50%;\n    }\n    50% {\n        background-position: 100% 50%;\n    }\n    100% {\n        background-position: 0% 50%;\n    }\n}\n\nbody{\n    background: rgb(234,251,255);\n    background: linear-gradient(203deg, rgba(234,251,255,1) 0%, rgba(213,255,230,1) 100%);\n}\n#page-header {\n    background-image: url(\"../images/bg2.svg\");\n    animation: gradientBG 15s ease infinite;\n    background-size: 200% 200%;\n}\n\n#nav{\n    /*background: linear-gradient(0deg, rgba(68, 147, 152,1) 0%, rgba(219,219,219,0.05) 100%);*/\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n    font-size: 20px;\n    font-weight: bold;\n    letter-spacing: 3px; /*字体间距*/\n    /*box-shadow: rgba(45, 128, 142,0.1) 0px 1px 0px 1px;*/\n}\n\n#card-info-btn{\n    background: linear-gradient(90deg, rgba(24,215,255,1) 0%, rgba(0,255,136,1) 35%, rgba(214,0,255,1) 100%);\n    height: 100%;\n    animation: gradientBG 15s ease infinite;\n    background-size: 300% 300%;\n    border-radius: 20px;\n    font-weight: bold;\n}\n#card-info-btn:hover{\n    scale: 1.03;\n}\n\n.recent-post-item:hover{\n    scale: 1.03;\n}\n\n#footer{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n\n}\n#footer-wrap{\n    color: black;\n    text-align: left;\n}\n\n#footer-wrap > div.framework-info > a{\n    color: gray;\n}\n\n#footer-wrap > div.footer_custom_text > a{\n    color: gray;\n}\n\n.card-info-data {\n    font-weight: bolder;\n}\n.card-info-data>a:hover {\n    scale: 1.05;\n    /*box-shadow: lightgray 0px 1px 0px 1px;*/\n    border-radius: 30px;\n    background: ghostwhite;\n}\n\n.article-title{\n    font-weight: bolder;\n}\n\n#post-info{\n    background: linear-gradient(90deg, rgba(24,215,255,1) 0%, rgba(108,255,187,0.5) 35%, rgba(0,189,255,0.2) 100%);\n    animation: gradientBG 15s ease infinite;\n    background-size: 300% 300%;\n    border-radius: 20px;\n    font-weight: bolder;\n}\n\n.post-copyright{\n    border-radius: 20px;\n    background: rgba(246, 248, 250);\n}\n\n.reward-button{\n    border-radius: 20px;\n}\n\n.reward-button:hover{\n    scale: 1.04;\n}\n\n.pagination-post{\n    border-radius: 20px;\n}\n.relatedPosts-list>div{\n    border-radius: 20px;\n    opacity: 100%;\n}\n\n#aside-content>.card-widget.card-info {\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content>.card-widget.card-announcement {\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-recent-post {\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#post{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-categories{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-tags{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-archives{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-webinfo{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#recent-posts{\n    background: transparent;\n}\n\n#recent-posts > div:nth-child(n){\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#page-header.post-bg:before {\n    background-color: rgb(0 0 0 / 60%);\n    border-bottom-right-radius: 11px;\n    border-bottom-left-radius: 11px;\n}\n\n#rightside > div > button, #rightside > div > a {\n    display: block;\n    margin-bottom: 6px;\n    width: 40px;\n    height: 40px;\n    border-radius: 25px;\n    background-color: #f1f1f1;\n    color: #2d587a;\n    text-align: center;\n    font-size: 16px;\n    line-height: 40px;\n}\n\n/*本地搜索美化*/\n.search-dialog .search-nav {\n    color: #000000;\n    font-size: 1.6em;\n    line-height: 2;\n}\n#local-search .search-dialog .local-search-box input {\n    padding: 13px 21px;\n    border: 3px solid #4182d9;\n    border-radius: 11px;\n}\nhr {\n    border: 3px dashed #4f80d8;\n}\n\n#aside-content #card-toc .toc-content .toc-link.active {\n    background: #669cbe;\n    border-radius: 5px;\n}\n\n/*底部圆角*/\n#pagination.page-number.current {\n    background: linear-gradient(90deg, rgba(24,215,255,1) 0%, rgba(108,255,187,0.5) 35%, rgba(0,189,255,0.2) 100%);\n    background-size: 300% 300%;\n    border-radius: 10px;\n}","source":"css/butterfly.css","raw":"@keyframes gradientBG {\n    0% {\n        background-position: 0% 50%;\n    }\n    50% {\n        background-position: 100% 50%;\n    }\n    100% {\n        background-position: 0% 50%;\n    }\n}\n\nbody{\n    background: rgb(234,251,255);\n    background: linear-gradient(203deg, rgba(234,251,255,1) 0%, rgba(213,255,230,1) 100%);\n}\n#page-header {\n    background-image: url(\"../images/bg2.svg\");\n    animation: gradientBG 15s ease infinite;\n    background-size: 200% 200%;\n}\n\n#nav{\n    /*background: linear-gradient(0deg, rgba(68, 147, 152,1) 0%, rgba(219,219,219,0.05) 100%);*/\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n    font-size: 20px;\n    font-weight: bold;\n    letter-spacing: 3px; /*字体间距*/\n    /*box-shadow: rgba(45, 128, 142,0.1) 0px 1px 0px 1px;*/\n}\n\n#card-info-btn{\n    background: linear-gradient(90deg, rgba(24,215,255,1) 0%, rgba(0,255,136,1) 35%, rgba(214,0,255,1) 100%);\n    height: 100%;\n    animation: gradientBG 15s ease infinite;\n    background-size: 300% 300%;\n    border-radius: 20px;\n    font-weight: bold;\n}\n#card-info-btn:hover{\n    scale: 1.03;\n}\n\n.recent-post-item:hover{\n    scale: 1.03;\n}\n\n#footer{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n\n}\n#footer-wrap{\n    color: black;\n    text-align: left;\n}\n\n#footer-wrap > div.framework-info > a{\n    color: gray;\n}\n\n#footer-wrap > div.footer_custom_text > a{\n    color: gray;\n}\n\n.card-info-data {\n    font-weight: bolder;\n}\n.card-info-data>a:hover {\n    scale: 1.05;\n    /*box-shadow: lightgray 0px 1px 0px 1px;*/\n    border-radius: 30px;\n    background: ghostwhite;\n}\n\n.article-title{\n    font-weight: bolder;\n}\n\n#post-info{\n    background: linear-gradient(90deg, rgba(24,215,255,1) 0%, rgba(108,255,187,0.5) 35%, rgba(0,189,255,0.2) 100%);\n    animation: gradientBG 15s ease infinite;\n    background-size: 300% 300%;\n    border-radius: 20px;\n    font-weight: bolder;\n}\n\n.post-copyright{\n    border-radius: 20px;\n    background: rgba(246, 248, 250);\n}\n\n.reward-button{\n    border-radius: 20px;\n}\n\n.reward-button:hover{\n    scale: 1.04;\n}\n\n.pagination-post{\n    border-radius: 20px;\n}\n.relatedPosts-list>div{\n    border-radius: 20px;\n    opacity: 100%;\n}\n\n#aside-content>.card-widget.card-info {\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content>.card-widget.card-announcement {\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-recent-post {\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#post{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-categories{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-tags{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-archives{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#aside-content > div.sticky_layout > div.card-widget.card-webinfo{\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#recent-posts{\n    background: transparent;\n}\n\n#recent-posts > div:nth-child(n){\n    background-color: rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(30px);\n    -webkit-backdrop-filter: blur(30px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n}\n\n#page-header.post-bg:before {\n    background-color: rgb(0 0 0 / 60%);\n    border-bottom-right-radius: 11px;\n    border-bottom-left-radius: 11px;\n}\n\n#rightside > div > button, #rightside > div > a {\n    display: block;\n    margin-bottom: 6px;\n    width: 40px;\n    height: 40px;\n    border-radius: 25px;\n    background-color: #f1f1f1;\n    color: #2d587a;\n    text-align: center;\n    font-size: 16px;\n    line-height: 40px;\n}\n\n/*本地搜索美化*/\n.search-dialog .search-nav {\n    color: #000000;\n    font-size: 1.6em;\n    line-height: 2;\n}\n#local-search .search-dialog .local-search-box input {\n    padding: 13px 21px;\n    border: 3px solid #4182d9;\n    border-radius: 11px;\n}\nhr {\n    border: 3px dashed #4f80d8;\n}\n\n#aside-content #card-toc .toc-content .toc-link.active {\n    background: #669cbe;\n    border-radius: 5px;\n}\n\n/*底部圆角*/\n#pagination.page-number.current {\n    background: linear-gradient(90deg, rgba(24,215,255,1) 0%, rgba(108,255,187,0.5) 35%, rgba(0,189,255,0.2) 100%);\n    background-size: 300% 300%;\n    border-radius: 10px;\n}","date":"2009-04-22T19:24:48.000Z","updated":"2024-01-15T14:58:34.000Z","path":"css/butterfly.css","layout":"false","_id":"clrf1or0p00058cfb099z3th0","title":"","comments":1,"content":"@keyframes gradientBG{0%{background-position:0 50%}50%{background-position:100% 50%}100%{background-position:0 50%}}body{background:#eafbff;background:linear-gradient(203deg,#eafbff 0,#d5ffe6 100%)}#page-header{background-image:url(\"../images/bg2.svg\");animation:gradientBG 15s ease infinite;background-size:200% 200%}#nav{border-bottom-left-radius:20px;border-bottom-right-radius:20px;font-size:20px;font-weight:700;letter-spacing:3px}#card-info-btn{background:linear-gradient(90deg,#18d7ff 0,#0f8 35%,#d600ff 100%);height:100%;animation:gradientBG 15s ease infinite;background-size:300% 300%;border-radius:20px;font-weight:700}#card-info-btn:hover{scale:1.03}.recent-post-item:hover{scale:1.03}#footer{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#footer-wrap{color:#000;text-align:left}#footer-wrap>div.framework-info>a{color:gray}#footer-wrap>div.footer_custom_text>a{color:gray}.card-info-data{font-weight:bolder}.card-info-data>a:hover{scale:1.05;border-radius:30px;background:#f8f8ff}.article-title{font-weight:bolder}#post-info{background:linear-gradient(90deg,#18d7ff 0,rgba(108,255,187,.5) 35%,rgba(0,189,255,.2) 100%);animation:gradientBG 15s ease infinite;background-size:300% 300%;border-radius:20px;font-weight:bolder}.post-copyright{border-radius:20px;background:rgba(246,248,250)}.reward-button{border-radius:20px}.reward-button:hover{scale:1.04}.pagination-post{border-radius:20px}.relatedPosts-list>div{border-radius:20px;opacity:100%}#aside-content>.card-widget.card-info{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#aside-content>.card-widget.card-announcement{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#aside-content>div.sticky_layout>div.card-widget.card-recent-post{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#post{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#aside-content>div.sticky_layout>div.card-widget.card-categories{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#aside-content>div.sticky_layout>div.card-widget.card-tags{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#aside-content>div.sticky_layout>div.card-widget.card-archives{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#aside-content>div.sticky_layout>div.card-widget.card-webinfo{background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#recent-posts{background:0 0}#recent-posts>div:nth-child(n){background-color:rgba(255,255,255,.5);backdrop-filter:blur(30px);-webkit-backdrop-filter:blur(30px);border:1px solid rgba(255,255,255,.18);box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;-webkit-box-shadow:rgba(142,142,142,.19) 0 6px 15px 0;border-radius:12px;-webkit-border-radius:12px}#page-header.post-bg:before{background-color:rgb(0 0 0 / 60%);border-bottom-right-radius:11px;border-bottom-left-radius:11px}#rightside>div>a,#rightside>div>button{display:block;margin-bottom:6px;width:40px;height:40px;border-radius:25px;background-color:#f1f1f1;color:#2d587a;text-align:center;font-size:16px;line-height:40px}.search-dialog .search-nav{color:#000;font-size:1.6em;line-height:2}#local-search .search-dialog .local-search-box input{padding:13px 21px;border:3px solid #4182d9;border-radius:11px}hr{border:3px dashed #4f80d8}#aside-content #card-toc .toc-content .toc-link.active{background:#669cbe;border-radius:5px}#pagination.page-number.current{background:linear-gradient(90deg,#18d7ff 0,rgba(108,255,187,.5) 35%,rgba(0,189,255,.2) 100%);background-size:300% 300%;border-radius:10px}"},{"title":"各种链接","date":"2024-01-13T09:02:33.000Z","type":"link","top_img":"../images/bg2.svg","_content":"","source":"links/index.md","raw":"---\ntitle: 各种链接\ndate: 2024-01-13 17:02:33\ntype: \"link\"\ntop_img: '../images/bg2.svg'\n---\n","updated":"2024-01-15T12:23:04.000Z","path":"links/index.html","comments":1,"layout":"page","_id":"clrf1or0q00068cfb2s52gn22","content":"","cover":"/images/cool-background.svg","cover_type":"img","excerpt":"","more":""},{"_content":":root{\n    --box-border-radius: 20px;\n    --home-post-hover-scale: 1.02;\n    --first-screen-background-color: #000000;\n}\n\n\n.first-screen-container {\n    width: 100%;\n    height: 100vh;\n    background-image: url(\"../images/bg2.svg\");\n    background-size: 600% 600%;\n    animation: gradientBG 30s ease infinite;\n}\n\n@keyframes gradientBG {\n     0% {\n         background-position: 0% 50%;\n     }\n     50% {\n         background-position: 100% 50%;\n     }\n     100% {\n         background-position: 0% 50%;\n     }\n }","source":"css/custom1.css","raw":":root{\n    --box-border-radius: 20px;\n    --home-post-hover-scale: 1.02;\n    --first-screen-background-color: #000000;\n}\n\n\n.first-screen-container {\n    width: 100%;\n    height: 100vh;\n    background-image: url(\"../images/bg2.svg\");\n    background-size: 600% 600%;\n    animation: gradientBG 30s ease infinite;\n}\n\n@keyframes gradientBG {\n     0% {\n         background-position: 0% 50%;\n     }\n     50% {\n         background-position: 100% 50%;\n     }\n     100% {\n         background-position: 0% 50%;\n     }\n }","date":"2009-04-22T19:24:48.000Z","updated":"2024-01-12T11:05:12.000Z","path":"css/custom1.css","layout":"false","title":"","comments":1,"_id":"clrf1or0r00078cfb14e7dvrw","content":":root{--box-border-radius:20px;--home-post-hover-scale:1.02;--first-screen-background-color:#000000}.first-screen-container{width:100%;height:100vh;background-image:url(\"../images/bg2.svg\");background-size:600% 600%;animation:gradientBG 30s ease infinite}@keyframes gradientBG{0%{background-position:0 50%}50%{background-position:100% 50%}100%{background-position:0 50%}}"},{"title":"标签","date":"2023-12-26T12:58:22.000Z","type":"tags","top_img":"../images/bg2.svg","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2023-12-26 20:58:22\ntype: \"tags\"\ntop_img: '../images/bg2.svg'\n---\n","updated":"2024-01-15T14:01:06.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clrf1or0s00098cfb78oghzqs","content":"","cover":"/images/cool-background.svg","cover_type":"img","excerpt":"","more":""}],"Post":[{"title":"使用hexo+github+netlify搭建个人博客","cover":"https://raw.gitmirror.com/rimdl/pic/master/pic4.png","abbrlink":"dc01","date":"2023-12-27T06:00:00.000Z","updated":"2023-12-27T13:00:00.000Z","_content":"# 开端\n\n> 最近看到网上关于搭建博客的教程比较多，所以打算使用hexo+github+netlify来搭建个人博客。\n\n# 环境搭建\n\n> 1.注册[github](https://github.com/)\n- 新建一个仓库用于存放hexo源码，可以选择私有仓库，netlify上可以使用私用仓库进行构建项目。\n\n> 2.下载安装[git](https://git-scm.com/download)\n- 安装及配置教程请百度。\n\n> 3.下载安装[node.js](https://nodejs.org/en/)\n- 确保安装\"npm\"。\n\n# webstorm\n> 编辑器选择\n- 由于我没事就折腾点项目，所以安装了WebStorm，所以这个项目也就使用了WebStorm。其他编辑器如：VSCode都可以达到同样的效果，我仅以WebStorm为例。\n\n> 项目配置\n- 打开WebStorm，新建项目，选择从`GET FROM VCS`导入.\n- ![pic1](https://raw.gitmirror.com/rimdl/pic/master/20231227161758.png)\n- 选择github账户，此时需要你进行登录，按照提示登录即可。\n- ![pic2](https://raw.gitmirror.com/rimdl/pic/master/20231227161945.png)\n- 登录完成后，选择克隆刚刚新建的项目，保存到自己本地。\n\n# hexo\n\n> 1.安装hexo\n- 打开WebStorm，选择`Terminal`，输入`npm install -g hexo`\n\n> 2.初始化hexo\n- 打开WebStorm，选择`Terminal`，输入`hexo init`\n\n> 3.启动\n- `hexo server`\n\n> 生成静态文件\n- `hexo generate`\n\n- 此时，hexo已布置完成，使用git push到仓库即可。\n\n# netlify\n\n- 打开[netlify](https://www.netlify.com/)，使用github账号进行注册并登录\n- 进入首页，点击Add new site ![netlify_add](https://raw.gitmirror.com/rimdl/pic/master/20231227185636.png)\n- 选择`Import an existing site`![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227185756.png)\n- 再点击`Deploy with GitHub` ![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227185921.png)\n- 此时会让你使用github授权，许可即可。\n- 之后就能看到你的仓库中的项目了。![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227190217.png)\n- 点击新建的hexo项目，会打开配置页面，默认情况下，只需要配置以下两项即可。![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227190515.png)\n  - Build Commend: `npm run build`\n  - Publish directory: `public`\n- 没有问题后，点击`Deploy xxx`，等待部署完成，部署成功之后，会默认生成一个域名，可以到配置页面修改你自己喜欢的名字，或者添加自己的域名。\n\n# 结束\n- 到此，一个hexo+github+netlify的个人博客就搭建完成了。如何写文章，如何美化，后续再说了。","source":"_posts/hexo_github_netlify.md","raw":"---\ntitle: 使用hexo+github+netlify搭建个人博客\ntags:\n  - hexo\n  - github\ncategories: hexo\ncover: 'https://raw.gitmirror.com/rimdl/pic/master/pic4.png'\nabbrlink: dc01\ndate: 2023-12-27 14:00:00\nupdated: 2023-12-27 21:00:00\n---\n# 开端\n\n> 最近看到网上关于搭建博客的教程比较多，所以打算使用hexo+github+netlify来搭建个人博客。\n\n# 环境搭建\n\n> 1.注册[github](https://github.com/)\n- 新建一个仓库用于存放hexo源码，可以选择私有仓库，netlify上可以使用私用仓库进行构建项目。\n\n> 2.下载安装[git](https://git-scm.com/download)\n- 安装及配置教程请百度。\n\n> 3.下载安装[node.js](https://nodejs.org/en/)\n- 确保安装\"npm\"。\n\n# webstorm\n> 编辑器选择\n- 由于我没事就折腾点项目，所以安装了WebStorm，所以这个项目也就使用了WebStorm。其他编辑器如：VSCode都可以达到同样的效果，我仅以WebStorm为例。\n\n> 项目配置\n- 打开WebStorm，新建项目，选择从`GET FROM VCS`导入.\n- ![pic1](https://raw.gitmirror.com/rimdl/pic/master/20231227161758.png)\n- 选择github账户，此时需要你进行登录，按照提示登录即可。\n- ![pic2](https://raw.gitmirror.com/rimdl/pic/master/20231227161945.png)\n- 登录完成后，选择克隆刚刚新建的项目，保存到自己本地。\n\n# hexo\n\n> 1.安装hexo\n- 打开WebStorm，选择`Terminal`，输入`npm install -g hexo`\n\n> 2.初始化hexo\n- 打开WebStorm，选择`Terminal`，输入`hexo init`\n\n> 3.启动\n- `hexo server`\n\n> 生成静态文件\n- `hexo generate`\n\n- 此时，hexo已布置完成，使用git push到仓库即可。\n\n# netlify\n\n- 打开[netlify](https://www.netlify.com/)，使用github账号进行注册并登录\n- 进入首页，点击Add new site ![netlify_add](https://raw.gitmirror.com/rimdl/pic/master/20231227185636.png)\n- 选择`Import an existing site`![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227185756.png)\n- 再点击`Deploy with GitHub` ![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227185921.png)\n- 此时会让你使用github授权，许可即可。\n- 之后就能看到你的仓库中的项目了。![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227190217.png)\n- 点击新建的hexo项目，会打开配置页面，默认情况下，只需要配置以下两项即可。![netlify](https://raw.gitmirror.com/rimdl/pic/master/20231227190515.png)\n  - Build Commend: `npm run build`\n  - Publish directory: `public`\n- 没有问题后，点击`Deploy xxx`，等待部署完成，部署成功之后，会默认生成一个域名，可以到配置页面修改你自己喜欢的名字，或者添加自己的域名。\n\n# 结束\n- 到此，一个hexo+github+netlify的个人博客就搭建完成了。如何写文章，如何美化，后续再说了。","slug":"hexo_github_netlify","published":1,"comments":1,"layout":"post","photos":[],"_id":"clrf1or0j00018cfb865x1clw","content":"<h1 id=\"开端\"><a href=\"#开端\" class=\"headerlink\" title=\"开端\"></a>开端</h1><blockquote>\n<p>最近看到网上关于搭建博客的教程比较多，所以打算使用hexo+github+netlify来搭建个人博客。</p>\n</blockquote>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><blockquote>\n<p>1.注册<a href=\"https://github.com/\">github</a></p>\n</blockquote>\n<ul>\n<li>新建一个仓库用于存放hexo源码，可以选择私有仓库，netlify上可以使用私用仓库进行构建项目。</li>\n</ul>\n<blockquote>\n<p>2.下载安装<a href=\"https://git-scm.com/download\">git</a></p>\n</blockquote>\n<ul>\n<li>安装及配置教程请百度。</li>\n</ul>\n<blockquote>\n<p>3.下载安装<a href=\"https://nodejs.org/en/\">node.js</a></p>\n</blockquote>\n<ul>\n<li>确保安装”npm”。</li>\n</ul>\n<h1 id=\"webstorm\"><a href=\"#webstorm\" class=\"headerlink\" title=\"webstorm\"></a>webstorm</h1><blockquote>\n<p>编辑器选择</p>\n</blockquote>\n<ul>\n<li>由于我没事就折腾点项目，所以安装了WebStorm，所以这个项目也就使用了WebStorm。其他编辑器如：VSCode都可以达到同样的效果，我仅以WebStorm为例。</li>\n</ul>\n<blockquote>\n<p>项目配置</p>\n</blockquote>\n<ul>\n<li>打开WebStorm，新建项目，选择从<code>GET FROM VCS</code>导入.</li>\n<li><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227161758.png\" alt=\"pic1\"></li>\n<li>选择github账户，此时需要你进行登录，按照提示登录即可。</li>\n<li><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227161945.png\" alt=\"pic2\"></li>\n<li>登录完成后，选择克隆刚刚新建的项目，保存到自己本地。</li>\n</ul>\n<h1 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h1><blockquote>\n<p>1.安装hexo</p>\n</blockquote>\n<ul>\n<li>打开WebStorm，选择<code>Terminal</code>，输入<code>npm install -g hexo</code></li>\n</ul>\n<blockquote>\n<p>2.初始化hexo</p>\n</blockquote>\n<ul>\n<li>打开WebStorm，选择<code>Terminal</code>，输入<code>hexo init</code></li>\n</ul>\n<blockquote>\n<p>3.启动</p>\n</blockquote>\n<ul>\n<li><code>hexo server</code></li>\n</ul>\n<blockquote>\n<p>生成静态文件</p>\n</blockquote>\n<ul>\n<li><p><code>hexo generate</code></p>\n</li>\n<li><p>此时，hexo已布置完成，使用git push到仓库即可。</p>\n</li>\n</ul>\n<h1 id=\"netlify\"><a href=\"#netlify\" class=\"headerlink\" title=\"netlify\"></a>netlify</h1><ul>\n<li>打开<a href=\"https://www.netlify.com/\">netlify</a>，使用github账号进行注册并登录</li>\n<li>进入首页，点击Add new site <img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227185636.png\" alt=\"netlify_add\"></li>\n<li>选择<code>Import an existing site</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227185756.png\" alt=\"netlify\"></li>\n<li>再点击<code>Deploy with GitHub</code> <img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227185921.png\" alt=\"netlify\"></li>\n<li>此时会让你使用github授权，许可即可。</li>\n<li>之后就能看到你的仓库中的项目了。<img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227190217.png\" alt=\"netlify\"></li>\n<li>点击新建的hexo项目，会打开配置页面，默认情况下，只需要配置以下两项即可。<img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227190515.png\" alt=\"netlify\"><ul>\n<li>Build Commend: <code>npm run build</code></li>\n<li>Publish directory: <code>public</code></li>\n</ul>\n</li>\n<li>没有问题后，点击<code>Deploy xxx</code>，等待部署完成，部署成功之后，会默认生成一个域名，可以到配置页面修改你自己喜欢的名字，或者添加自己的域名。</li>\n</ul>\n<h1 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h1><ul>\n<li>到此，一个hexo+github+netlify的个人博客就搭建完成了。如何写文章，如何美化，后续再说了。</li>\n</ul>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"开端\"><a href=\"#开端\" class=\"headerlink\" title=\"开端\"></a>开端</h1><blockquote>\n<p>最近看到网上关于搭建博客的教程比较多，所以打算使用hexo+github+netlify来搭建个人博客。</p>\n</blockquote>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><blockquote>\n<p>1.注册<a href=\"https://github.com/\">github</a></p>\n</blockquote>\n<ul>\n<li>新建一个仓库用于存放hexo源码，可以选择私有仓库，netlify上可以使用私用仓库进行构建项目。</li>\n</ul>\n<blockquote>\n<p>2.下载安装<a href=\"https://git-scm.com/download\">git</a></p>\n</blockquote>\n<ul>\n<li>安装及配置教程请百度。</li>\n</ul>\n<blockquote>\n<p>3.下载安装<a href=\"https://nodejs.org/en/\">node.js</a></p>\n</blockquote>\n<ul>\n<li>确保安装”npm”。</li>\n</ul>\n<h1 id=\"webstorm\"><a href=\"#webstorm\" class=\"headerlink\" title=\"webstorm\"></a>webstorm</h1><blockquote>\n<p>编辑器选择</p>\n</blockquote>\n<ul>\n<li>由于我没事就折腾点项目，所以安装了WebStorm，所以这个项目也就使用了WebStorm。其他编辑器如：VSCode都可以达到同样的效果，我仅以WebStorm为例。</li>\n</ul>\n<blockquote>\n<p>项目配置</p>\n</blockquote>\n<ul>\n<li>打开WebStorm，新建项目，选择从<code>GET FROM VCS</code>导入.</li>\n<li><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227161758.png\" alt=\"pic1\"></li>\n<li>选择github账户，此时需要你进行登录，按照提示登录即可。</li>\n<li><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227161945.png\" alt=\"pic2\"></li>\n<li>登录完成后，选择克隆刚刚新建的项目，保存到自己本地。</li>\n</ul>\n<h1 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h1><blockquote>\n<p>1.安装hexo</p>\n</blockquote>\n<ul>\n<li>打开WebStorm，选择<code>Terminal</code>，输入<code>npm install -g hexo</code></li>\n</ul>\n<blockquote>\n<p>2.初始化hexo</p>\n</blockquote>\n<ul>\n<li>打开WebStorm，选择<code>Terminal</code>，输入<code>hexo init</code></li>\n</ul>\n<blockquote>\n<p>3.启动</p>\n</blockquote>\n<ul>\n<li><code>hexo server</code></li>\n</ul>\n<blockquote>\n<p>生成静态文件</p>\n</blockquote>\n<ul>\n<li><p><code>hexo generate</code></p>\n</li>\n<li><p>此时，hexo已布置完成，使用git push到仓库即可。</p>\n</li>\n</ul>\n<h1 id=\"netlify\"><a href=\"#netlify\" class=\"headerlink\" title=\"netlify\"></a>netlify</h1><ul>\n<li>打开<a href=\"https://www.netlify.com/\">netlify</a>，使用github账号进行注册并登录</li>\n<li>进入首页，点击Add new site <img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227185636.png\" alt=\"netlify_add\"></li>\n<li>选择<code>Import an existing site</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227185756.png\" alt=\"netlify\"></li>\n<li>再点击<code>Deploy with GitHub</code> <img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227185921.png\" alt=\"netlify\"></li>\n<li>此时会让你使用github授权，许可即可。</li>\n<li>之后就能看到你的仓库中的项目了。<img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227190217.png\" alt=\"netlify\"></li>\n<li>点击新建的hexo项目，会打开配置页面，默认情况下，只需要配置以下两项即可。<img src=\"https://raw.gitmirror.com/rimdl/pic/master/20231227190515.png\" alt=\"netlify\"><ul>\n<li>Build Commend: <code>npm run build</code></li>\n<li>Publish directory: <code>public</code></li>\n</ul>\n</li>\n<li>没有问题后，点击<code>Deploy xxx</code>，等待部署完成，部署成功之后，会默认生成一个域名，可以到配置页面修改你自己喜欢的名字，或者添加自己的域名。</li>\n</ul>\n<h1 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h1><ul>\n<li>到此，一个hexo+github+netlify的个人博客就搭建完成了。如何写文章，如何美化，后续再说了。</li>\n</ul>\n"},{"title":"利用GitHub给博客搭建一个图床","cover":"https://raw.gitmirror.com/xinsi-tecool/mypic/main/c665826d-89d1-4551-8c4d-7a0917cd8506.png","toc":true,"comment":true,"aging":true,"aging_days":30,"share":true,"reward":true,"abbrlink":"4bbf","date":"2024-01-15T06:51:15.000Z","updated":"2024-01-15T06:51:15.000Z","_content":"# 开头\n- 我的博客使用的是Markdown格式，所以文章中的图片就可以使用链接的形式添加，这时拥有一个属于自己的图床就非常重要了，本文就如何利用github搭建图床进行说明。\n******\n# 搭建步骤\n## github\n- 首先在github中创建一个**公开仓库**用于存放图片，然后点击这个[链接](https://github.com/settings/tokens)去获取token（注意：这个token只会显示一次，一定要保存好，否则就只能重新生成）\n******\n> 详细步骤\n1. 点击上方链接后跳转到此处，点击`Generate new token(classic)`![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/9ae83adc-781d-4c97-86f1-4cf4d450d4cb.png)\n2. `Note`随便填写，`Expiration`选择过期时间，选择`No expiration`表示永不过期，之后再勾选上`repo`这个复选框，如图中所示。![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/2b15f147-6273-49dc-925f-eab1183a215f.png)\n3. 滑倒最下方，点击Generate token。![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/e372ed90-343e-4e32-961c-0b5aec5c105e.png)\n4. 最后就可以看到生成的`token`了，复制下来保存即可。![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/4da5c972-9838-4a7e-bfd9-d8b833ae8c7a.png)\n******\n## 客户端\n- 较多人使用的有[PicGo](https://github.com/Molunerfinn/PicGo)，由于我想要以网页的方式进行管理，所以就自己写了一个小站点，可以访问github查看我的[代码](https://github.com/rimdl/GitPic)。\n- 可以将其部署在GitHub pages，gitee pages，cloudflare pages等平台。\n******\n> 配置\n- 部署完成打开后默认是如下界面![GitPic](https://raw.gitmirror.com/xinsi-tecool/mypic/main/7c601f13-5890-4e9d-95d3-30fc8e48f96f.png)\n- 配置内容：\n    - 在`仓库`位置填入你的仓库信息，例如，本项目的仓库地址是[https://github.com/rimdl/GitPic](https://github.com/rimdl/GitPic)，此处填入`rimdl/GitPic`即可。\n    - `Token`处填写上面提到的在github获取的`token`。\n    - `cdn`处填写用于加速github静态资源的cdn链接，例如：`https://cdn.jsdelivr.net/gh/`，默认的github链接在国内访问体验非常不好，所以加入cdn加速会好很多。\n    - 配置完成后点击`保存`，将会在浏览器本地保存以上信息，例如使用chrome浏览器可以通过以下步骤查看到：`F12`->`应用`->`本地存储空间`->`本项目域名`。\n    - 所以，由于这些信息都保存在浏览器本地，会有丢失的风险，获取到的`token`只会在github显示一次，丢失后只能重新获取，因此建议将以上配置信息单独备份到一个不会丢失的地方。\n******\n> 上传图片\n- 成功配置后，将会显示如下界面![上传图片](https://raw.gitmirror.com/xinsi-tecool/mypic/main/3592165d-1dd9-4a2a-89c5-d94452f16b33.png)\n- 右侧上传区域，拖动或者点击文件到此即可上传。\n- 下方左侧显示你的GitHub账户信息(用户名和邮箱)，**注意：邮箱如果无法获取的，请到github进行配置，否则某些功能将会受限**\n- 邮箱配置（正常获取到邮箱的请跳过此步骤）\n    - 打开[链接](https://github.com/settings/emails)，取消勾选`Keep my email addresses private`![邮箱配置](https://raw.gitmirror.com/xinsi-tecool/mypic/main/d7f77bd1-333a-4fa8-85d0-c8b29b8560a5.png)\n    - 再打开[链接](https://github.com/settings/profile)，设置`Public email`，选择你的邮箱即可![邮箱配置](https://raw.gitmirror.com/xinsi-tecool/mypic/main/ffba32c7-aabe-4f2a-85fc-4cbab4474b8a.png)\n- 图片上传成功后，会在下方显示，点击`复制`按钮即可将链接复制到剪贴板，然后到你需要使用该图片的地方粘贴即可。（注意：上传的文件将会以`UUID`的形式重新命名。在设置了`cdn`的情况下，图片链接将会修改为`cdn`加速后的链接。）![上传图片](https://raw.gitmirror.com/xinsi-tecool/mypic/main/89d07d0f-5837-419f-8ff5-0e0dd18d04f6.png)\n******\n> 管理图片\n- 在本程序下方会展示仓库中所包含的所有图片，图中的`获取当前仓库文件`与`刷新`两个按钮功能相同，图片在上传成功后并不能立刻显示在此处，所以添加此功能按钮用于刷新（注意：上传成功后请等待一定的时间，再点击刷新。）图中关于填充方式的几个按钮的功能请参考[Image 图片](https://element-plus.org/zh-CN/component/image.html)![图片管理](https://raw.gitmirror.com/xinsi-tecool/mypic/main/e99ea3fa-f9f1-454b-a1cb-a33c6768bc5a.png)。\n- 点击图片可查看大图，点击复制链接可复制当前图片的链接，点击删除可删除此图片![图片管理](https://raw.gitmirror.com/xinsi-tecool/mypic/main/a7a19bdf-b630-454b-8a41-d536432c99c3.png)\n******\n# 结束\n- 以上就是本次搭建图床的全部过程。","source":"_posts/利用github给博客搭建一个图床.md","raw":"---\ntitle: 利用GitHub给博客搭建一个图床\ntags:\n  - github\ncategories:\n  - 技术\ncover: >-\n  https://raw.gitmirror.com/xinsi-tecool/mypic/main/c665826d-89d1-4551-8c4d-7a0917cd8506.png\ntoc: true\ncomment: true\naging: true\naging_days: 30\nshare: true\nreward: true\nabbrlink: 4bbf\ndate: 2024-01-15 14:51:15\nupdated: 2024-01-15 14:51:15\n---\n# 开头\n- 我的博客使用的是Markdown格式，所以文章中的图片就可以使用链接的形式添加，这时拥有一个属于自己的图床就非常重要了，本文就如何利用github搭建图床进行说明。\n******\n# 搭建步骤\n## github\n- 首先在github中创建一个**公开仓库**用于存放图片，然后点击这个[链接](https://github.com/settings/tokens)去获取token（注意：这个token只会显示一次，一定要保存好，否则就只能重新生成）\n******\n> 详细步骤\n1. 点击上方链接后跳转到此处，点击`Generate new token(classic)`![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/9ae83adc-781d-4c97-86f1-4cf4d450d4cb.png)\n2. `Note`随便填写，`Expiration`选择过期时间，选择`No expiration`表示永不过期，之后再勾选上`repo`这个复选框，如图中所示。![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/2b15f147-6273-49dc-925f-eab1183a215f.png)\n3. 滑倒最下方，点击Generate token。![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/e372ed90-343e-4e32-961c-0b5aec5c105e.png)\n4. 最后就可以看到生成的`token`了，复制下来保存即可。![获取token](https://raw.gitmirror.com/xinsi-tecool/mypic/main/4da5c972-9838-4a7e-bfd9-d8b833ae8c7a.png)\n******\n## 客户端\n- 较多人使用的有[PicGo](https://github.com/Molunerfinn/PicGo)，由于我想要以网页的方式进行管理，所以就自己写了一个小站点，可以访问github查看我的[代码](https://github.com/rimdl/GitPic)。\n- 可以将其部署在GitHub pages，gitee pages，cloudflare pages等平台。\n******\n> 配置\n- 部署完成打开后默认是如下界面![GitPic](https://raw.gitmirror.com/xinsi-tecool/mypic/main/7c601f13-5890-4e9d-95d3-30fc8e48f96f.png)\n- 配置内容：\n    - 在`仓库`位置填入你的仓库信息，例如，本项目的仓库地址是[https://github.com/rimdl/GitPic](https://github.com/rimdl/GitPic)，此处填入`rimdl/GitPic`即可。\n    - `Token`处填写上面提到的在github获取的`token`。\n    - `cdn`处填写用于加速github静态资源的cdn链接，例如：`https://cdn.jsdelivr.net/gh/`，默认的github链接在国内访问体验非常不好，所以加入cdn加速会好很多。\n    - 配置完成后点击`保存`，将会在浏览器本地保存以上信息，例如使用chrome浏览器可以通过以下步骤查看到：`F12`->`应用`->`本地存储空间`->`本项目域名`。\n    - 所以，由于这些信息都保存在浏览器本地，会有丢失的风险，获取到的`token`只会在github显示一次，丢失后只能重新获取，因此建议将以上配置信息单独备份到一个不会丢失的地方。\n******\n> 上传图片\n- 成功配置后，将会显示如下界面![上传图片](https://raw.gitmirror.com/xinsi-tecool/mypic/main/3592165d-1dd9-4a2a-89c5-d94452f16b33.png)\n- 右侧上传区域，拖动或者点击文件到此即可上传。\n- 下方左侧显示你的GitHub账户信息(用户名和邮箱)，**注意：邮箱如果无法获取的，请到github进行配置，否则某些功能将会受限**\n- 邮箱配置（正常获取到邮箱的请跳过此步骤）\n    - 打开[链接](https://github.com/settings/emails)，取消勾选`Keep my email addresses private`![邮箱配置](https://raw.gitmirror.com/xinsi-tecool/mypic/main/d7f77bd1-333a-4fa8-85d0-c8b29b8560a5.png)\n    - 再打开[链接](https://github.com/settings/profile)，设置`Public email`，选择你的邮箱即可![邮箱配置](https://raw.gitmirror.com/xinsi-tecool/mypic/main/ffba32c7-aabe-4f2a-85fc-4cbab4474b8a.png)\n- 图片上传成功后，会在下方显示，点击`复制`按钮即可将链接复制到剪贴板，然后到你需要使用该图片的地方粘贴即可。（注意：上传的文件将会以`UUID`的形式重新命名。在设置了`cdn`的情况下，图片链接将会修改为`cdn`加速后的链接。）![上传图片](https://raw.gitmirror.com/xinsi-tecool/mypic/main/89d07d0f-5837-419f-8ff5-0e0dd18d04f6.png)\n******\n> 管理图片\n- 在本程序下方会展示仓库中所包含的所有图片，图中的`获取当前仓库文件`与`刷新`两个按钮功能相同，图片在上传成功后并不能立刻显示在此处，所以添加此功能按钮用于刷新（注意：上传成功后请等待一定的时间，再点击刷新。）图中关于填充方式的几个按钮的功能请参考[Image 图片](https://element-plus.org/zh-CN/component/image.html)![图片管理](https://raw.gitmirror.com/xinsi-tecool/mypic/main/e99ea3fa-f9f1-454b-a1cb-a33c6768bc5a.png)。\n- 点击图片可查看大图，点击复制链接可复制当前图片的链接，点击删除可删除此图片![图片管理](https://raw.gitmirror.com/xinsi-tecool/mypic/main/a7a19bdf-b630-454b-8a41-d536432c99c3.png)\n******\n# 结束\n- 以上就是本次搭建图床的全部过程。","slug":"利用github给博客搭建一个图床","published":1,"comments":1,"layout":"post","photos":[],"_id":"clrf1or1n000d8cfbbvug0l25","content":"<h1 id=\"开头\"><a href=\"#开头\" class=\"headerlink\" title=\"开头\"></a>开头</h1><ul>\n<li>我的博客使用的是Markdown格式，所以文章中的图片就可以使用链接的形式添加，这时拥有一个属于自己的图床就非常重要了，本文就如何利用github搭建图床进行说明。</li>\n</ul>\n<hr>\n<h1 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h1><h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><ul>\n<li>首先在github中创建一个<strong>公开仓库</strong>用于存放图片，然后点击这个<a href=\"https://github.com/settings/tokens\">链接</a>去获取token（注意：这个token只会显示一次，一定要保存好，否则就只能重新生成）</li>\n</ul>\n<hr>\n<blockquote>\n<p>详细步骤</p>\n</blockquote>\n<ol>\n<li>点击上方链接后跳转到此处，点击<code>Generate new token(classic)</code><img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/9ae83adc-781d-4c97-86f1-4cf4d450d4cb.png\" alt=\"获取token\"></li>\n<li><code>Note</code>随便填写，<code>Expiration</code>选择过期时间，选择<code>No expiration</code>表示永不过期，之后再勾选上<code>repo</code>这个复选框，如图中所示。<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/2b15f147-6273-49dc-925f-eab1183a215f.png\" alt=\"获取token\"></li>\n<li>滑倒最下方，点击Generate token。<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/e372ed90-343e-4e32-961c-0b5aec5c105e.png\" alt=\"获取token\"></li>\n<li>最后就可以看到生成的<code>token</code>了，复制下来保存即可。<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/4da5c972-9838-4a7e-bfd9-d8b833ae8c7a.png\" alt=\"获取token\"></li>\n</ol>\n<hr>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><ul>\n<li>较多人使用的有<a href=\"https://github.com/Molunerfinn/PicGo\">PicGo</a>，由于我想要以网页的方式进行管理，所以就自己写了一个小站点，可以访问github查看我的<a href=\"https://github.com/rimdl/GitPic\">代码</a>。</li>\n<li>可以将其部署在GitHub pages，gitee pages，cloudflare pages等平台。</li>\n</ul>\n<hr>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li>部署完成打开后默认是如下界面<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/7c601f13-5890-4e9d-95d3-30fc8e48f96f.png\" alt=\"GitPic\"></li>\n<li>配置内容：<ul>\n<li>在<code>仓库</code>位置填入你的仓库信息，例如，本项目的仓库地址是<a href=\"https://github.com/rimdl/GitPic\">https://github.com/rimdl/GitPic</a>，此处填入<code>rimdl/GitPic</code>即可。</li>\n<li><code>Token</code>处填写上面提到的在github获取的<code>token</code>。</li>\n<li><code>cdn</code>处填写用于加速github静态资源的cdn链接，例如：<code>https://cdn.jsdelivr.net/gh/</code>，默认的github链接在国内访问体验非常不好，所以加入cdn加速会好很多。</li>\n<li>配置完成后点击<code>保存</code>，将会在浏览器本地保存以上信息，例如使用chrome浏览器可以通过以下步骤查看到：<code>F12</code>-&gt;<code>应用</code>-&gt;<code>本地存储空间</code>-&gt;<code>本项目域名</code>。</li>\n<li>所以，由于这些信息都保存在浏览器本地，会有丢失的风险，获取到的<code>token</code>只会在github显示一次，丢失后只能重新获取，因此建议将以上配置信息单独备份到一个不会丢失的地方。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<blockquote>\n<p>上传图片</p>\n</blockquote>\n<ul>\n<li>成功配置后，将会显示如下界面<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/3592165d-1dd9-4a2a-89c5-d94452f16b33.png\" alt=\"上传图片\"></li>\n<li>右侧上传区域，拖动或者点击文件到此即可上传。</li>\n<li>下方左侧显示你的GitHub账户信息(用户名和邮箱)，<strong>注意：邮箱如果无法获取的，请到github进行配置，否则某些功能将会受限</strong></li>\n<li>邮箱配置（正常获取到邮箱的请跳过此步骤）<ul>\n<li>打开<a href=\"https://github.com/settings/emails\">链接</a>，取消勾选<code>Keep my email addresses private</code><img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/d7f77bd1-333a-4fa8-85d0-c8b29b8560a5.png\" alt=\"邮箱配置\"></li>\n<li>再打开<a href=\"https://github.com/settings/profile\">链接</a>，设置<code>Public email</code>，选择你的邮箱即可<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/ffba32c7-aabe-4f2a-85fc-4cbab4474b8a.png\" alt=\"邮箱配置\"></li>\n</ul>\n</li>\n<li>图片上传成功后，会在下方显示，点击<code>复制</code>按钮即可将链接复制到剪贴板，然后到你需要使用该图片的地方粘贴即可。（注意：上传的文件将会以<code>UUID</code>的形式重新命名。在设置了<code>cdn</code>的情况下，图片链接将会修改为<code>cdn</code>加速后的链接。）<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/89d07d0f-5837-419f-8ff5-0e0dd18d04f6.png\" alt=\"上传图片\"></li>\n</ul>\n<hr>\n<blockquote>\n<p>管理图片</p>\n</blockquote>\n<ul>\n<li>在本程序下方会展示仓库中所包含的所有图片，图中的<code>获取当前仓库文件</code>与<code>刷新</code>两个按钮功能相同，图片在上传成功后并不能立刻显示在此处，所以添加此功能按钮用于刷新（注意：上传成功后请等待一定的时间，再点击刷新。）图中关于填充方式的几个按钮的功能请参考<a href=\"https://element-plus.org/zh-CN/component/image.html\">Image 图片</a><img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/e99ea3fa-f9f1-454b-a1cb-a33c6768bc5a.png\" alt=\"图片管理\">。</li>\n<li>点击图片可查看大图，点击复制链接可复制当前图片的链接，点击删除可删除此图片<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/a7a19bdf-b630-454b-8a41-d536432c99c3.png\" alt=\"图片管理\"></li>\n</ul>\n<hr>\n<h1 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h1><ul>\n<li>以上就是本次搭建图床的全部过程。</li>\n</ul>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"开头\"><a href=\"#开头\" class=\"headerlink\" title=\"开头\"></a>开头</h1><ul>\n<li>我的博客使用的是Markdown格式，所以文章中的图片就可以使用链接的形式添加，这时拥有一个属于自己的图床就非常重要了，本文就如何利用github搭建图床进行说明。</li>\n</ul>\n<hr>\n<h1 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h1><h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><ul>\n<li>首先在github中创建一个<strong>公开仓库</strong>用于存放图片，然后点击这个<a href=\"https://github.com/settings/tokens\">链接</a>去获取token（注意：这个token只会显示一次，一定要保存好，否则就只能重新生成）</li>\n</ul>\n<hr>\n<blockquote>\n<p>详细步骤</p>\n</blockquote>\n<ol>\n<li>点击上方链接后跳转到此处，点击<code>Generate new token(classic)</code><img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/9ae83adc-781d-4c97-86f1-4cf4d450d4cb.png\" alt=\"获取token\"></li>\n<li><code>Note</code>随便填写，<code>Expiration</code>选择过期时间，选择<code>No expiration</code>表示永不过期，之后再勾选上<code>repo</code>这个复选框，如图中所示。<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/2b15f147-6273-49dc-925f-eab1183a215f.png\" alt=\"获取token\"></li>\n<li>滑倒最下方，点击Generate token。<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/e372ed90-343e-4e32-961c-0b5aec5c105e.png\" alt=\"获取token\"></li>\n<li>最后就可以看到生成的<code>token</code>了，复制下来保存即可。<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/4da5c972-9838-4a7e-bfd9-d8b833ae8c7a.png\" alt=\"获取token\"></li>\n</ol>\n<hr>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><ul>\n<li>较多人使用的有<a href=\"https://github.com/Molunerfinn/PicGo\">PicGo</a>，由于我想要以网页的方式进行管理，所以就自己写了一个小站点，可以访问github查看我的<a href=\"https://github.com/rimdl/GitPic\">代码</a>。</li>\n<li>可以将其部署在GitHub pages，gitee pages，cloudflare pages等平台。</li>\n</ul>\n<hr>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li>部署完成打开后默认是如下界面<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/7c601f13-5890-4e9d-95d3-30fc8e48f96f.png\" alt=\"GitPic\"></li>\n<li>配置内容：<ul>\n<li>在<code>仓库</code>位置填入你的仓库信息，例如，本项目的仓库地址是<a href=\"https://github.com/rimdl/GitPic\">https://github.com/rimdl/GitPic</a>，此处填入<code>rimdl/GitPic</code>即可。</li>\n<li><code>Token</code>处填写上面提到的在github获取的<code>token</code>。</li>\n<li><code>cdn</code>处填写用于加速github静态资源的cdn链接，例如：<code>https://cdn.jsdelivr.net/gh/</code>，默认的github链接在国内访问体验非常不好，所以加入cdn加速会好很多。</li>\n<li>配置完成后点击<code>保存</code>，将会在浏览器本地保存以上信息，例如使用chrome浏览器可以通过以下步骤查看到：<code>F12</code>-&gt;<code>应用</code>-&gt;<code>本地存储空间</code>-&gt;<code>本项目域名</code>。</li>\n<li>所以，由于这些信息都保存在浏览器本地，会有丢失的风险，获取到的<code>token</code>只会在github显示一次，丢失后只能重新获取，因此建议将以上配置信息单独备份到一个不会丢失的地方。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<blockquote>\n<p>上传图片</p>\n</blockquote>\n<ul>\n<li>成功配置后，将会显示如下界面<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/3592165d-1dd9-4a2a-89c5-d94452f16b33.png\" alt=\"上传图片\"></li>\n<li>右侧上传区域，拖动或者点击文件到此即可上传。</li>\n<li>下方左侧显示你的GitHub账户信息(用户名和邮箱)，<strong>注意：邮箱如果无法获取的，请到github进行配置，否则某些功能将会受限</strong></li>\n<li>邮箱配置（正常获取到邮箱的请跳过此步骤）<ul>\n<li>打开<a href=\"https://github.com/settings/emails\">链接</a>，取消勾选<code>Keep my email addresses private</code><img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/d7f77bd1-333a-4fa8-85d0-c8b29b8560a5.png\" alt=\"邮箱配置\"></li>\n<li>再打开<a href=\"https://github.com/settings/profile\">链接</a>，设置<code>Public email</code>，选择你的邮箱即可<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/ffba32c7-aabe-4f2a-85fc-4cbab4474b8a.png\" alt=\"邮箱配置\"></li>\n</ul>\n</li>\n<li>图片上传成功后，会在下方显示，点击<code>复制</code>按钮即可将链接复制到剪贴板，然后到你需要使用该图片的地方粘贴即可。（注意：上传的文件将会以<code>UUID</code>的形式重新命名。在设置了<code>cdn</code>的情况下，图片链接将会修改为<code>cdn</code>加速后的链接。）<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/89d07d0f-5837-419f-8ff5-0e0dd18d04f6.png\" alt=\"上传图片\"></li>\n</ul>\n<hr>\n<blockquote>\n<p>管理图片</p>\n</blockquote>\n<ul>\n<li>在本程序下方会展示仓库中所包含的所有图片，图中的<code>获取当前仓库文件</code>与<code>刷新</code>两个按钮功能相同，图片在上传成功后并不能立刻显示在此处，所以添加此功能按钮用于刷新（注意：上传成功后请等待一定的时间，再点击刷新。）图中关于填充方式的几个按钮的功能请参考<a href=\"https://element-plus.org/zh-CN/component/image.html\">Image 图片</a><img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/e99ea3fa-f9f1-454b-a1cb-a33c6768bc5a.png\" alt=\"图片管理\">。</li>\n<li>点击图片可查看大图，点击复制链接可复制当前图片的链接，点击删除可删除此图片<img src=\"https://raw.gitmirror.com/xinsi-tecool/mypic/main/a7a19bdf-b630-454b-8a41-d536432c99c3.png\" alt=\"图片管理\"></li>\n</ul>\n<hr>\n<h1 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h1><ul>\n<li>以上就是本次搭建图床的全部过程。</li>\n</ul>\n"},{"title":"关于Docker的使用","abbrlink":"ad37","date":"2023-12-26T14:00:00.000Z","updated":"2023-12-26T14:30:00.000Z","cover":"/images/cool-background.svg","_content":"\n# 简介\n- Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux\n# docker\n- 制作镜像\n    - 在要制作镜像的项目根目录编写 `Docckerfile`： \n```bash\n# 通过FROM关键词，例如我需要一个python3.6的环境：\n\nFROM python:3.6\n\n# 我们只需要在Dockerfile里面编写如上的代码，就能够拉取到一个python3.6的环境。\n# 同理其他语言也是，例如.net：\n\nFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\n\n# 还有前端项目：\n\nFROM nginx\n\n# 具体的环境大家可以通过docker search 来进行搜索。\n# 这是我们的第一步。\n# 下一步我们也许会去定一个根目录，注意是也许，不是一定。\n\nWORKDIR /app\n\n# WORKDIR的意思就是让后面的路径成为根路径，注意哦，这里的路径是docker里面的路径。\n# 然后，我们就会把代码或者是编译完成之后的运行文件COPY到docker当中\n\nCOPY . .\n\n# 上面就是COPY+本地路径 +docker中的路径\n# 也就是本机当前路径文件，拷贝到docker中的路径中。\n# 在Python中，我们还需要去安装一些Python库，所以你可能还需要这个操作：\n\nRUN pip install -r requirements.txt\n\n# RUN 后面接的就是一个命令行。\n\n# 安装完成之后，你需要去暴露一下端口\n\nEXPOSE 80\n\n# 这样能够让我们后续将docker中的端口和本机中的端口进行映射，从而我们可以通过本机ip+端口来进行访问操作。\n# 最后一步就是运行，当然如果是Python我们就可以直接运行了，但是有一些语言框架可能不行，因为它可能还需要进行一次编译，然后再运行编译后的文件，所以这里大家需要注意了。\n# 如果你不想在docker打包过程中编译，你也可以在本机中编译完，直接运行编译后的文件。\n# 当然在Python中我们直接运行Python即可。\n\nCMD [\"python\",\"main.py\"]\n\n# 在.NET环境下可能就是这样的姿势：\n\nENTRYPOINT [\"dotnet\", \"HubService.dll\"]\n\n# 在前端项目中，我们就不需要再去运行啥，直接部署到Nginx上就行了，例如下面：\n\nFROM nginx\nCOPY dist/ /usr/share/nginx/html/\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\n\n# 也就是我们自己在本机上写个Nginx的配置文件，然后COPY过去就行了。\n# 好了，上面大致就是打包的整个过程与思路，每个框架，每个语言都会有不一样，所以没有准确的答案，准确的答案在官方文档中一般有所体现。\n# 这里也给大家汇总一下python的dockerfile\n\nFROM python:3.6\nWORKDIR /app\nCOPY . /app\nRUN pip install -r requirements.txt\nEXPOSE 80\nCMD [\"python\",\"app.py\"]\n\n# 打包QPDBot的代码\nFROM python:3.10\nWORKDIR /app\nCOPY . /app\nVOLUME /app/config\n\nRUN pip config set global.index-url http://mirrors.aliyun.com/pypi/simple\nRUN pip config set install.trusted-host mirrors.aliyun.com\nRUN pip install -U pip\n\nRUN pip install -r requirements.txt\nCMD [\"python\",\"main.py\"]\n\n# 编写完dockerfile，我们一般喜欢放在需要打包的地方的根路径，然后直接运行\n\ndocker build -t 你想要的名字 . \n\n# 运行之后，docker会自动完成dockerfile里面的每一个步骤。\n# 打包完成后，我们就可以看到images。\n# 大家直接docker images 即可。\n# 随后，我们就可以来创建容器了。\n\ndocker run --name=QPDBot -d -v /path/to/config:/app/config rjxinsi/qpdbot:latest\n\n```\n- 发布镜像\n```shell\n# 如果没有登录，先登录\ndocker login\n\n# 使用如下的指令就给本地镜像打tag\n\ndocker tag myImage:v1 your_user_name/myImage:v1\n\n# 之后push\n\ndocker push your_user_name/myImage:v1\n\n```","source":"_posts/关于Docker的使用.md","raw":"---\ntitle: 关于Docker的使用\ntags: Docker\ncategories: Docker\nabbrlink: ad37\ndate: 2023-12-26 22:00:00\nupdated: 2023-12-26 22:30:00\ncover: \n---\n\n# 简介\n- Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux\n# docker\n- 制作镜像\n    - 在要制作镜像的项目根目录编写 `Docckerfile`： \n```bash\n# 通过FROM关键词，例如我需要一个python3.6的环境：\n\nFROM python:3.6\n\n# 我们只需要在Dockerfile里面编写如上的代码，就能够拉取到一个python3.6的环境。\n# 同理其他语言也是，例如.net：\n\nFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\n\n# 还有前端项目：\n\nFROM nginx\n\n# 具体的环境大家可以通过docker search 来进行搜索。\n# 这是我们的第一步。\n# 下一步我们也许会去定一个根目录，注意是也许，不是一定。\n\nWORKDIR /app\n\n# WORKDIR的意思就是让后面的路径成为根路径，注意哦，这里的路径是docker里面的路径。\n# 然后，我们就会把代码或者是编译完成之后的运行文件COPY到docker当中\n\nCOPY . .\n\n# 上面就是COPY+本地路径 +docker中的路径\n# 也就是本机当前路径文件，拷贝到docker中的路径中。\n# 在Python中，我们还需要去安装一些Python库，所以你可能还需要这个操作：\n\nRUN pip install -r requirements.txt\n\n# RUN 后面接的就是一个命令行。\n\n# 安装完成之后，你需要去暴露一下端口\n\nEXPOSE 80\n\n# 这样能够让我们后续将docker中的端口和本机中的端口进行映射，从而我们可以通过本机ip+端口来进行访问操作。\n# 最后一步就是运行，当然如果是Python我们就可以直接运行了，但是有一些语言框架可能不行，因为它可能还需要进行一次编译，然后再运行编译后的文件，所以这里大家需要注意了。\n# 如果你不想在docker打包过程中编译，你也可以在本机中编译完，直接运行编译后的文件。\n# 当然在Python中我们直接运行Python即可。\n\nCMD [\"python\",\"main.py\"]\n\n# 在.NET环境下可能就是这样的姿势：\n\nENTRYPOINT [\"dotnet\", \"HubService.dll\"]\n\n# 在前端项目中，我们就不需要再去运行啥，直接部署到Nginx上就行了，例如下面：\n\nFROM nginx\nCOPY dist/ /usr/share/nginx/html/\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\n\n# 也就是我们自己在本机上写个Nginx的配置文件，然后COPY过去就行了。\n# 好了，上面大致就是打包的整个过程与思路，每个框架，每个语言都会有不一样，所以没有准确的答案，准确的答案在官方文档中一般有所体现。\n# 这里也给大家汇总一下python的dockerfile\n\nFROM python:3.6\nWORKDIR /app\nCOPY . /app\nRUN pip install -r requirements.txt\nEXPOSE 80\nCMD [\"python\",\"app.py\"]\n\n# 打包QPDBot的代码\nFROM python:3.10\nWORKDIR /app\nCOPY . /app\nVOLUME /app/config\n\nRUN pip config set global.index-url http://mirrors.aliyun.com/pypi/simple\nRUN pip config set install.trusted-host mirrors.aliyun.com\nRUN pip install -U pip\n\nRUN pip install -r requirements.txt\nCMD [\"python\",\"main.py\"]\n\n# 编写完dockerfile，我们一般喜欢放在需要打包的地方的根路径，然后直接运行\n\ndocker build -t 你想要的名字 . \n\n# 运行之后，docker会自动完成dockerfile里面的每一个步骤。\n# 打包完成后，我们就可以看到images。\n# 大家直接docker images 即可。\n# 随后，我们就可以来创建容器了。\n\ndocker run --name=QPDBot -d -v /path/to/config:/app/config rjxinsi/qpdbot:latest\n\n```\n- 发布镜像\n```shell\n# 如果没有登录，先登录\ndocker login\n\n# 使用如下的指令就给本地镜像打tag\n\ndocker tag myImage:v1 your_user_name/myImage:v1\n\n# 之后push\n\ndocker push your_user_name/myImage:v1\n\n```","slug":"关于Docker的使用","published":1,"comments":1,"layout":"post","photos":[],"_id":"clrf1or1o000e8cfbc33n753q","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux</li>\n</ul>\n<h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h1><ul>\n<li>制作镜像<ul>\n<li>在要制作镜像的项目根目录编写 <code>Docckerfile</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过FROM关键词，例如我需要一个python3.6的环境：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM python:3.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 我们只需要在Dockerfile里面编写如上的代码，就能够拉取到一个python3.6的环境。</span></span><br><span class=\"line\"><span class=\"comment\"># 同理其他语言也是，例如.net：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 还有前端项目：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 具体的环境大家可以通过docker search 来进行搜索。</span></span><br><span class=\"line\"><span class=\"comment\"># 这是我们的第一步。</span></span><br><span class=\"line\"><span class=\"comment\"># 下一步我们也许会去定一个根目录，注意是也许，不是一定。</span></span><br><span class=\"line\"></span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># WORKDIR的意思就是让后面的路径成为根路径，注意哦，这里的路径是docker里面的路径。</span></span><br><span class=\"line\"><span class=\"comment\"># 然后，我们就会把代码或者是编译完成之后的运行文件COPY到docker当中</span></span><br><span class=\"line\"></span><br><span class=\"line\">COPY . .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上面就是COPY+本地路径 +docker中的路径</span></span><br><span class=\"line\"><span class=\"comment\"># 也就是本机当前路径文件，拷贝到docker中的路径中。</span></span><br><span class=\"line\"><span class=\"comment\"># 在Python中，我们还需要去安装一些Python库，所以你可能还需要这个操作：</span></span><br><span class=\"line\"></span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># RUN 后面接的就是一个命令行。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装完成之后，你需要去暴露一下端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这样能够让我们后续将docker中的端口和本机中的端口进行映射，从而我们可以通过本机ip+端口来进行访问操作。</span></span><br><span class=\"line\"><span class=\"comment\"># 最后一步就是运行，当然如果是Python我们就可以直接运行了，但是有一些语言框架可能不行，因为它可能还需要进行一次编译，然后再运行编译后的文件，所以这里大家需要注意了。</span></span><br><span class=\"line\"><span class=\"comment\"># 如果你不想在docker打包过程中编译，你也可以在本机中编译完，直接运行编译后的文件。</span></span><br><span class=\"line\"><span class=\"comment\"># 当然在Python中我们直接运行Python即可。</span></span><br><span class=\"line\"></span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>,<span class=\"string\">&quot;main.py&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在.NET环境下可能就是这样的姿势：</span></span><br><span class=\"line\"></span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">&quot;dotnet&quot;</span>, <span class=\"string\">&quot;HubService.dll&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在前端项目中，我们就不需要再去运行啥，直接部署到Nginx上就行了，例如下面：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM nginx</span><br><span class=\"line\">COPY dist/ /usr/share/nginx/html/</span><br><span class=\"line\">COPY nginx/default.conf /etc/nginx/conf.d/default.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也就是我们自己在本机上写个Nginx的配置文件，然后COPY过去就行了。</span></span><br><span class=\"line\"><span class=\"comment\"># 好了，上面大致就是打包的整个过程与思路，每个框架，每个语言都会有不一样，所以没有准确的答案，准确的答案在官方文档中一般有所体现。</span></span><br><span class=\"line\"><span class=\"comment\"># 这里也给大家汇总一下python的dockerfile</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM python:3.6</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">COPY . /app</span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>,<span class=\"string\">&quot;app.py&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包QPDBot的代码</span></span><br><span class=\"line\">FROM python:3.10</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">COPY . /app</span><br><span class=\"line\">VOLUME /app/config</span><br><span class=\"line\"></span><br><span class=\"line\">RUN pip config <span class=\"built_in\">set</span> global.index-url http://mirrors.aliyun.com/pypi/simple</span><br><span class=\"line\">RUN pip config <span class=\"built_in\">set</span> install.trusted-host mirrors.aliyun.com</span><br><span class=\"line\">RUN pip install -U pip</span><br><span class=\"line\"></span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>,<span class=\"string\">&quot;main.py&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编写完dockerfile，我们一般喜欢放在需要打包的地方的根路径，然后直接运行</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker build -t 你想要的名字 . </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行之后，docker会自动完成dockerfile里面的每一个步骤。</span></span><br><span class=\"line\"><span class=\"comment\"># 打包完成后，我们就可以看到images。</span></span><br><span class=\"line\"><span class=\"comment\"># 大家直接docker images 即可。</span></span><br><span class=\"line\"><span class=\"comment\"># 随后，我们就可以来创建容器了。</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run --name=QPDBot -d -v /path/to/config:/app/config rjxinsi/qpdbot:latest</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>发布镜像<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果没有登录，先登录</span></span><br><span class=\"line\">docker login</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用如下的指令就给本地镜像打tag</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker tag myImage:v1 your_user_name/myImage:v1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">之后push</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker push your_user_name/myImage:v1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux</li>\n</ul>\n<h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h1><ul>\n<li>制作镜像<ul>\n<li>在要制作镜像的项目根目录编写 <code>Docckerfile</code>： <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过FROM关键词，例如我需要一个python3.6的环境：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM python:3.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 我们只需要在Dockerfile里面编写如上的代码，就能够拉取到一个python3.6的环境。</span></span><br><span class=\"line\"><span class=\"comment\"># 同理其他语言也是，例如.net：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 还有前端项目：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 具体的环境大家可以通过docker search 来进行搜索。</span></span><br><span class=\"line\"><span class=\"comment\"># 这是我们的第一步。</span></span><br><span class=\"line\"><span class=\"comment\"># 下一步我们也许会去定一个根目录，注意是也许，不是一定。</span></span><br><span class=\"line\"></span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># WORKDIR的意思就是让后面的路径成为根路径，注意哦，这里的路径是docker里面的路径。</span></span><br><span class=\"line\"><span class=\"comment\"># 然后，我们就会把代码或者是编译完成之后的运行文件COPY到docker当中</span></span><br><span class=\"line\"></span><br><span class=\"line\">COPY . .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上面就是COPY+本地路径 +docker中的路径</span></span><br><span class=\"line\"><span class=\"comment\"># 也就是本机当前路径文件，拷贝到docker中的路径中。</span></span><br><span class=\"line\"><span class=\"comment\"># 在Python中，我们还需要去安装一些Python库，所以你可能还需要这个操作：</span></span><br><span class=\"line\"></span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># RUN 后面接的就是一个命令行。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装完成之后，你需要去暴露一下端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这样能够让我们后续将docker中的端口和本机中的端口进行映射，从而我们可以通过本机ip+端口来进行访问操作。</span></span><br><span class=\"line\"><span class=\"comment\"># 最后一步就是运行，当然如果是Python我们就可以直接运行了，但是有一些语言框架可能不行，因为它可能还需要进行一次编译，然后再运行编译后的文件，所以这里大家需要注意了。</span></span><br><span class=\"line\"><span class=\"comment\"># 如果你不想在docker打包过程中编译，你也可以在本机中编译完，直接运行编译后的文件。</span></span><br><span class=\"line\"><span class=\"comment\"># 当然在Python中我们直接运行Python即可。</span></span><br><span class=\"line\"></span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>,<span class=\"string\">&quot;main.py&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在.NET环境下可能就是这样的姿势：</span></span><br><span class=\"line\"></span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">&quot;dotnet&quot;</span>, <span class=\"string\">&quot;HubService.dll&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在前端项目中，我们就不需要再去运行啥，直接部署到Nginx上就行了，例如下面：</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM nginx</span><br><span class=\"line\">COPY dist/ /usr/share/nginx/html/</span><br><span class=\"line\">COPY nginx/default.conf /etc/nginx/conf.d/default.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也就是我们自己在本机上写个Nginx的配置文件，然后COPY过去就行了。</span></span><br><span class=\"line\"><span class=\"comment\"># 好了，上面大致就是打包的整个过程与思路，每个框架，每个语言都会有不一样，所以没有准确的答案，准确的答案在官方文档中一般有所体现。</span></span><br><span class=\"line\"><span class=\"comment\"># 这里也给大家汇总一下python的dockerfile</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM python:3.6</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">COPY . /app</span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>,<span class=\"string\">&quot;app.py&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包QPDBot的代码</span></span><br><span class=\"line\">FROM python:3.10</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">COPY . /app</span><br><span class=\"line\">VOLUME /app/config</span><br><span class=\"line\"></span><br><span class=\"line\">RUN pip config <span class=\"built_in\">set</span> global.index-url http://mirrors.aliyun.com/pypi/simple</span><br><span class=\"line\">RUN pip config <span class=\"built_in\">set</span> install.trusted-host mirrors.aliyun.com</span><br><span class=\"line\">RUN pip install -U pip</span><br><span class=\"line\"></span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>,<span class=\"string\">&quot;main.py&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编写完dockerfile，我们一般喜欢放在需要打包的地方的根路径，然后直接运行</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker build -t 你想要的名字 . </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行之后，docker会自动完成dockerfile里面的每一个步骤。</span></span><br><span class=\"line\"><span class=\"comment\"># 打包完成后，我们就可以看到images。</span></span><br><span class=\"line\"><span class=\"comment\"># 大家直接docker images 即可。</span></span><br><span class=\"line\"><span class=\"comment\"># 随后，我们就可以来创建容器了。</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run --name=QPDBot -d -v /path/to/config:/app/config rjxinsi/qpdbot:latest</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>发布镜像<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果没有登录，先登录</span></span><br><span class=\"line\">docker login</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用如下的指令就给本地镜像打tag</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker tag myImage:v1 your_user_name/myImage:v1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">之后push</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker push your_user_name/myImage:v1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"abbrlink":"643d","title":"给部署在netlify上的hexo博客添加cms内容管理系统","date":"2024-01-11T11:41:32.000Z","updated":"2024-01-12T11:26:36.000Z","cover":"https://raw.gitmirror.com/rimdl/pic/master/20240111212627.png","comment":true,"_content":"# 为什么要添加这个“内容管理系统”\n\n* 如果没有添加cms的话，正常写作博客时需要先在本地写好，再通过git push到github，这一过程较为繁琐，通过cms这种方式就可以实现在线形式的编写博客体验。\n\n# 开始\n\n* 可参考[decapcms](https://decapcms.org/docs/add-to-your-site/)\n\n## 项目配置\n\n* 在hexo项目的`source`目录下创建`admin`目录，添加以下两个文件：\n\n```shell\nadmin\n ├ index.html\n └ config.yml\n```\n\n* `index.html`文件内容\n\n```html\n<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <meta name=\"robots\" content=\"noindex\" />\n  <title>Content Manager</title>\n</head>\n<body>\n  <!-- Include the script that builds the page and powers Decap CMS -->\n  <script src=\"https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js\"></script>\n<!--上面的代码script是从unpkgCDN 加载的。如果有任何问题，jsDelivr可以用作替代来源。只需将其设置src为https://cdn.jsdelivr.net/npm/decap-cms@^3.0.0/dist/decap-cms.js-->\n</body>\n</html>\n```\n\n* `config.yml`文件内容\n\n```yml\nbackend:\n  name: git-gateway\n  branch: main # Branch to update (master by default)\n\n# These lines should *not* be indented\nmedia_folder: 'source/images' # Media files will be stored in the repo under source/images\npublic_folder: 'images' # The src attribute for uploaded media will begin with images\n\n# This line should *not* be indented\npublish_mode: editorial_workflow\n\ncollections:\n  - name: 'Post' # Used in routes, e.g., /admin/collections/blog\n    label: 'Post' # Used in the UI\n    folder: 'source/_posts' # The path to the folder where the documents are stored\n    create: true # Allow users to create new documents in this collection\n    slug: '{{slug}}' # Filename template, e.g., YYYY-MM-DD-title.md\n    fields: # The fields for each document, usually in front matter\n      - {label: 'Title', name: 'title', widget: 'string'}\n      - {label: 'Publish Date', name: 'date', widget: 'datetime'}\n      - {label: 'Body', name: 'body', widget: 'markdown'}\n```\n\n* 完成以上文件的创建后，修改项目根目录的`_config.yml`文件，跳过对`source/admin`的渲染：\n\n```yml\nskip_render: admin/**\n```\n\n## netlify配置\n\n* 打开[netlify](https://app.netlify.com)，点击自己部署的网站，点击`Site configuration`![pic1](https://raw.gitmirror.com/rimdl/pic/master/20240111200239.png)\n* 点击`Build & Deploy`![pic2](https://raw.gitmirror.com/rimdl/pic/master/20240111200712.png) \n* 点击`Post processing`![pic3](https://raw.gitmirror.com/rimdl/pic/master/20240111200835.png)\n* 点击`Snippet Injection section`,`Add Snippet`，分别添加以下内容，`Script name`随意填写，以下内容填入`html`处：\n\n  > `Before</head>`\n\n```html\n<script src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\"></script>\n```\n\n> `Before</body>`\n\n```html\n<script>\n  if (window.netlifyIdentity) {\n    window.netlifyIdentity.on(\"init\", user => {\n      if (!user) {\n        window.netlifyIdentity.on(\"login\", () => {\n          document.location.href = \"/admin/\";\n        });\n      }\n    });\n  }\n</script>\n```\n\n![pic4](https://raw.gitmirror.com/rimdl/pic/master/20240111201028.png)\n\n* 回到`Site configuration`处，点击`Identity`，再点击`Enable Identity`启用。\n* 启用后点击`Registration`，再点击`Invite only`![pic5](https://raw.gitmirror.com/rimdl/pic/master/20240111201801.png)\n* `Registration preferences`处设置为`Invite only`，这样就只有你邀请的人才能编辑，防止被人恶意修改。\n* ~~`External providers`添加GitHub账号，可以启用使用github账户进行登录。~~这样好像任何人使用GitHub登录都可以修改文章了。\n* 完成以上步骤后，回到`Identity`处，分别点击`Services`，`Git Gateway`，`Enable Git Gateway`\n\n## 访问\n\n* 完成了以上操作后，在你的博客地址后面加入`/admin`，就可以进入到cms的页面了，通过GitHub账号或者你邀请的email账户进行登录后，即可进行在线的博客文章编写了。![pic6](https://raw.gitmirror.com/rimdl/pic/master/20240111202616.png)","source":"_posts/添加cms.md","raw":"---\nabbrlink: 643d\ntitle: 给部署在netlify上的hexo博客添加cms内容管理系统\ndate: 2024-01-11 19:41:32\nupdated: 2024-01-12 19:26:36\ntags:\n  - hexo\n  - netlify\ncategories:\n  - hexo\ncover: https://raw.gitmirror.com/rimdl/pic/master/20240111212627.png\ncomment: true\n---\n# 为什么要添加这个“内容管理系统”\n\n* 如果没有添加cms的话，正常写作博客时需要先在本地写好，再通过git push到github，这一过程较为繁琐，通过cms这种方式就可以实现在线形式的编写博客体验。\n\n# 开始\n\n* 可参考[decapcms](https://decapcms.org/docs/add-to-your-site/)\n\n## 项目配置\n\n* 在hexo项目的`source`目录下创建`admin`目录，添加以下两个文件：\n\n```shell\nadmin\n ├ index.html\n └ config.yml\n```\n\n* `index.html`文件内容\n\n```html\n<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <meta name=\"robots\" content=\"noindex\" />\n  <title>Content Manager</title>\n</head>\n<body>\n  <!-- Include the script that builds the page and powers Decap CMS -->\n  <script src=\"https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js\"></script>\n<!--上面的代码script是从unpkgCDN 加载的。如果有任何问题，jsDelivr可以用作替代来源。只需将其设置src为https://cdn.jsdelivr.net/npm/decap-cms@^3.0.0/dist/decap-cms.js-->\n</body>\n</html>\n```\n\n* `config.yml`文件内容\n\n```yml\nbackend:\n  name: git-gateway\n  branch: main # Branch to update (master by default)\n\n# These lines should *not* be indented\nmedia_folder: 'source/images' # Media files will be stored in the repo under source/images\npublic_folder: 'images' # The src attribute for uploaded media will begin with images\n\n# This line should *not* be indented\npublish_mode: editorial_workflow\n\ncollections:\n  - name: 'Post' # Used in routes, e.g., /admin/collections/blog\n    label: 'Post' # Used in the UI\n    folder: 'source/_posts' # The path to the folder where the documents are stored\n    create: true # Allow users to create new documents in this collection\n    slug: '{{slug}}' # Filename template, e.g., YYYY-MM-DD-title.md\n    fields: # The fields for each document, usually in front matter\n      - {label: 'Title', name: 'title', widget: 'string'}\n      - {label: 'Publish Date', name: 'date', widget: 'datetime'}\n      - {label: 'Body', name: 'body', widget: 'markdown'}\n```\n\n* 完成以上文件的创建后，修改项目根目录的`_config.yml`文件，跳过对`source/admin`的渲染：\n\n```yml\nskip_render: admin/**\n```\n\n## netlify配置\n\n* 打开[netlify](https://app.netlify.com)，点击自己部署的网站，点击`Site configuration`![pic1](https://raw.gitmirror.com/rimdl/pic/master/20240111200239.png)\n* 点击`Build & Deploy`![pic2](https://raw.gitmirror.com/rimdl/pic/master/20240111200712.png) \n* 点击`Post processing`![pic3](https://raw.gitmirror.com/rimdl/pic/master/20240111200835.png)\n* 点击`Snippet Injection section`,`Add Snippet`，分别添加以下内容，`Script name`随意填写，以下内容填入`html`处：\n\n  > `Before</head>`\n\n```html\n<script src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\"></script>\n```\n\n> `Before</body>`\n\n```html\n<script>\n  if (window.netlifyIdentity) {\n    window.netlifyIdentity.on(\"init\", user => {\n      if (!user) {\n        window.netlifyIdentity.on(\"login\", () => {\n          document.location.href = \"/admin/\";\n        });\n      }\n    });\n  }\n</script>\n```\n\n![pic4](https://raw.gitmirror.com/rimdl/pic/master/20240111201028.png)\n\n* 回到`Site configuration`处，点击`Identity`，再点击`Enable Identity`启用。\n* 启用后点击`Registration`，再点击`Invite only`![pic5](https://raw.gitmirror.com/rimdl/pic/master/20240111201801.png)\n* `Registration preferences`处设置为`Invite only`，这样就只有你邀请的人才能编辑，防止被人恶意修改。\n* ~~`External providers`添加GitHub账号，可以启用使用github账户进行登录。~~这样好像任何人使用GitHub登录都可以修改文章了。\n* 完成以上步骤后，回到`Identity`处，分别点击`Services`，`Git Gateway`，`Enable Git Gateway`\n\n## 访问\n\n* 完成了以上操作后，在你的博客地址后面加入`/admin`，就可以进入到cms的页面了，通过GitHub账号或者你邀请的email账户进行登录后，即可进行在线的博客文章编写了。![pic6](https://raw.gitmirror.com/rimdl/pic/master/20240111202616.png)","slug":"添加cms","published":1,"comments":1,"layout":"post","photos":[],"_id":"clrf1or1p000h8cfb6gb0g32v","content":"<h1 id=\"为什么要添加这个“内容管理系统”\"><a href=\"#为什么要添加这个“内容管理系统”\" class=\"headerlink\" title=\"为什么要添加这个“内容管理系统”\"></a>为什么要添加这个“内容管理系统”</h1><ul>\n<li>如果没有添加cms的话，正常写作博客时需要先在本地写好，再通过git push到github，这一过程较为繁琐，通过cms这种方式就可以实现在线形式的编写博客体验。</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><ul>\n<li>可参考<a href=\"https://decapcms.org/docs/add-to-your-site/\">decapcms</a></li>\n</ul>\n<h2 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h2><ul>\n<li>在hexo项目的<code>source</code>目录下创建<code>admin</code>目录，添加以下两个文件：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin</span><br><span class=\"line\"> ├ index.html</span><br><span class=\"line\"> └ config.yml</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>index.html</code>文件内容</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;robots&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;noindex&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Content Manager<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Include the script that builds the page and powers Decap CMS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--上面的代码script是从unpkgCDN 加载的。如果有任何问题，jsDelivr可以用作替代来源。只需将其设置src为https://cdn.jsdelivr.net/npm/decap-cms@^3.0.0/dist/decap-cms.js--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>config.yml</code>文件内容</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">backend:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">git-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span> <span class=\"comment\"># Branch to update (master by default)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># These lines should *not* be indented</span></span><br><span class=\"line\"><span class=\"attr\">media_folder:</span> <span class=\"string\">&#x27;source/images&#x27;</span> <span class=\"comment\"># Media files will be stored in the repo under source/images</span></span><br><span class=\"line\"><span class=\"attr\">public_folder:</span> <span class=\"string\">&#x27;images&#x27;</span> <span class=\"comment\"># The src attribute for uploaded media will begin with images</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># This line should *not* be indented</span></span><br><span class=\"line\"><span class=\"attr\">publish_mode:</span> <span class=\"string\">editorial_workflow</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">collections:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">&#x27;Post&#x27;</span> <span class=\"comment\"># Used in routes, e.g., /admin/collections/blog</span></span><br><span class=\"line\">    <span class=\"attr\">label:</span> <span class=\"string\">&#x27;Post&#x27;</span> <span class=\"comment\"># Used in the UI</span></span><br><span class=\"line\">    <span class=\"attr\">folder:</span> <span class=\"string\">&#x27;source/_posts&#x27;</span> <span class=\"comment\"># The path to the folder where the documents are stored</span></span><br><span class=\"line\">    <span class=\"attr\">create:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Allow users to create new documents in this collection</span></span><br><span class=\"line\">    <span class=\"attr\">slug:</span> <span class=\"string\">&#x27;<span class=\"template-variable\">&#123;&#123;slug&#125;&#125;</span>&#x27;</span> <span class=\"comment\"># Filename template, e.g., YYYY-MM-DD-title.md</span></span><br><span class=\"line\">    <span class=\"attr\">fields:</span> <span class=\"comment\"># The fields for each document, usually in front matter</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">label:</span> <span class=\"string\">&#x27;Title&#x27;</span>, <span class=\"attr\">name:</span> <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"attr\">widget:</span> <span class=\"string\">&#x27;string&#x27;</span>&#125;</span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">label:</span> <span class=\"string\">&#x27;Publish Date&#x27;</span>, <span class=\"attr\">name:</span> <span class=\"string\">&#x27;date&#x27;</span>, <span class=\"attr\">widget:</span> <span class=\"string\">&#x27;datetime&#x27;</span>&#125;</span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">label:</span> <span class=\"string\">&#x27;Body&#x27;</span>, <span class=\"attr\">name:</span> <span class=\"string\">&#x27;body&#x27;</span>, <span class=\"attr\">widget:</span> <span class=\"string\">&#x27;markdown&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>完成以上文件的创建后，修改项目根目录的<code>_config.yml</code>文件，跳过对<code>source/admin</code>的渲染：</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">skip_render:</span> <span class=\"string\">admin/**</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"netlify配置\"><a href=\"#netlify配置\" class=\"headerlink\" title=\"netlify配置\"></a>netlify配置</h2><ul>\n<li><p>打开<a href=\"https://app.netlify.com/\">netlify</a>，点击自己部署的网站，点击<code>Site configuration</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111200239.png\" alt=\"pic1\"></p>\n</li>\n<li><p>点击<code>Build &amp; Deploy</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111200712.png\" alt=\"pic2\"> </p>\n</li>\n<li><p>点击<code>Post processing</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111200835.png\" alt=\"pic3\"></p>\n</li>\n<li><p>点击<code>Snippet Injection section</code>,<code>Add Snippet</code>，分别添加以下内容，<code>Script name</code>随意填写，以下内容填入<code>html</code>处：</p>\n<blockquote>\n<p><code>Before&lt;/head&gt;</code></p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://identity.netlify.com/v1/netlify-identity-widget.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>Before&lt;/body&gt;</code></p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">netlifyIdentity</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">window</span>.<span class=\"property\">netlifyIdentity</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;init&quot;</span>, <span class=\"function\"><span class=\"params\">user</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">if</span> (!user) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">netlifyIdentity</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;login&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">document</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&quot;/admin/&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111201028.png\" alt=\"pic4\"></p>\n<ul>\n<li>回到<code>Site configuration</code>处，点击<code>Identity</code>，再点击<code>Enable Identity</code>启用。</li>\n<li>启用后点击<code>Registration</code>，再点击<code>Invite only</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111201801.png\" alt=\"pic5\"></li>\n<li><code>Registration preferences</code>处设置为<code>Invite only</code>，这样就只有你邀请的人才能编辑，防止被人恶意修改。</li>\n<li><del><code>External providers</code>添加GitHub账号，可以启用使用github账户进行登录。</del>这样好像任何人使用GitHub登录都可以修改文章了。</li>\n<li>完成以上步骤后，回到<code>Identity</code>处，分别点击<code>Services</code>，<code>Git Gateway</code>，<code>Enable Git Gateway</code></li>\n</ul>\n<h2 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h2><ul>\n<li>完成了以上操作后，在你的博客地址后面加入<code>/admin</code>，就可以进入到cms的页面了，通过GitHub账号或者你邀请的email账户进行登录后，即可进行在线的博客文章编写了。<img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111202616.png\" alt=\"pic6\"></li>\n</ul>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"为什么要添加这个“内容管理系统”\"><a href=\"#为什么要添加这个“内容管理系统”\" class=\"headerlink\" title=\"为什么要添加这个“内容管理系统”\"></a>为什么要添加这个“内容管理系统”</h1><ul>\n<li>如果没有添加cms的话，正常写作博客时需要先在本地写好，再通过git push到github，这一过程较为繁琐，通过cms这种方式就可以实现在线形式的编写博客体验。</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><ul>\n<li>可参考<a href=\"https://decapcms.org/docs/add-to-your-site/\">decapcms</a></li>\n</ul>\n<h2 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h2><ul>\n<li>在hexo项目的<code>source</code>目录下创建<code>admin</code>目录，添加以下两个文件：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin</span><br><span class=\"line\"> ├ index.html</span><br><span class=\"line\"> └ config.yml</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>index.html</code>文件内容</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;robots&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;noindex&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Content Manager<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Include the script that builds the page and powers Decap CMS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--上面的代码script是从unpkgCDN 加载的。如果有任何问题，jsDelivr可以用作替代来源。只需将其设置src为https://cdn.jsdelivr.net/npm/decap-cms@^3.0.0/dist/decap-cms.js--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>config.yml</code>文件内容</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">backend:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">git-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span> <span class=\"comment\"># Branch to update (master by default)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># These lines should *not* be indented</span></span><br><span class=\"line\"><span class=\"attr\">media_folder:</span> <span class=\"string\">&#x27;source/images&#x27;</span> <span class=\"comment\"># Media files will be stored in the repo under source/images</span></span><br><span class=\"line\"><span class=\"attr\">public_folder:</span> <span class=\"string\">&#x27;images&#x27;</span> <span class=\"comment\"># The src attribute for uploaded media will begin with images</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># This line should *not* be indented</span></span><br><span class=\"line\"><span class=\"attr\">publish_mode:</span> <span class=\"string\">editorial_workflow</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">collections:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">&#x27;Post&#x27;</span> <span class=\"comment\"># Used in routes, e.g., /admin/collections/blog</span></span><br><span class=\"line\">    <span class=\"attr\">label:</span> <span class=\"string\">&#x27;Post&#x27;</span> <span class=\"comment\"># Used in the UI</span></span><br><span class=\"line\">    <span class=\"attr\">folder:</span> <span class=\"string\">&#x27;source/_posts&#x27;</span> <span class=\"comment\"># The path to the folder where the documents are stored</span></span><br><span class=\"line\">    <span class=\"attr\">create:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Allow users to create new documents in this collection</span></span><br><span class=\"line\">    <span class=\"attr\">slug:</span> <span class=\"string\">&#x27;<span class=\"template-variable\">&#123;&#123;slug&#125;&#125;</span>&#x27;</span> <span class=\"comment\"># Filename template, e.g., YYYY-MM-DD-title.md</span></span><br><span class=\"line\">    <span class=\"attr\">fields:</span> <span class=\"comment\"># The fields for each document, usually in front matter</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">label:</span> <span class=\"string\">&#x27;Title&#x27;</span>, <span class=\"attr\">name:</span> <span class=\"string\">&#x27;title&#x27;</span>, <span class=\"attr\">widget:</span> <span class=\"string\">&#x27;string&#x27;</span>&#125;</span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">label:</span> <span class=\"string\">&#x27;Publish Date&#x27;</span>, <span class=\"attr\">name:</span> <span class=\"string\">&#x27;date&#x27;</span>, <span class=\"attr\">widget:</span> <span class=\"string\">&#x27;datetime&#x27;</span>&#125;</span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">label:</span> <span class=\"string\">&#x27;Body&#x27;</span>, <span class=\"attr\">name:</span> <span class=\"string\">&#x27;body&#x27;</span>, <span class=\"attr\">widget:</span> <span class=\"string\">&#x27;markdown&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>完成以上文件的创建后，修改项目根目录的<code>_config.yml</code>文件，跳过对<code>source/admin</code>的渲染：</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">skip_render:</span> <span class=\"string\">admin/**</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"netlify配置\"><a href=\"#netlify配置\" class=\"headerlink\" title=\"netlify配置\"></a>netlify配置</h2><ul>\n<li><p>打开<a href=\"https://app.netlify.com/\">netlify</a>，点击自己部署的网站，点击<code>Site configuration</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111200239.png\" alt=\"pic1\"></p>\n</li>\n<li><p>点击<code>Build &amp; Deploy</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111200712.png\" alt=\"pic2\"> </p>\n</li>\n<li><p>点击<code>Post processing</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111200835.png\" alt=\"pic3\"></p>\n</li>\n<li><p>点击<code>Snippet Injection section</code>,<code>Add Snippet</code>，分别添加以下内容，<code>Script name</code>随意填写，以下内容填入<code>html</code>处：</p>\n<blockquote>\n<p><code>Before&lt;/head&gt;</code></p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://identity.netlify.com/v1/netlify-identity-widget.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>Before&lt;/body&gt;</code></p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">netlifyIdentity</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">window</span>.<span class=\"property\">netlifyIdentity</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;init&quot;</span>, <span class=\"function\"><span class=\"params\">user</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">if</span> (!user) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">netlifyIdentity</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;login&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">document</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = <span class=\"string\">&quot;/admin/&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111201028.png\" alt=\"pic4\"></p>\n<ul>\n<li>回到<code>Site configuration</code>处，点击<code>Identity</code>，再点击<code>Enable Identity</code>启用。</li>\n<li>启用后点击<code>Registration</code>，再点击<code>Invite only</code><img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111201801.png\" alt=\"pic5\"></li>\n<li><code>Registration preferences</code>处设置为<code>Invite only</code>，这样就只有你邀请的人才能编辑，防止被人恶意修改。</li>\n<li><del><code>External providers</code>添加GitHub账号，可以启用使用github账户进行登录。</del>这样好像任何人使用GitHub登录都可以修改文章了。</li>\n<li>完成以上步骤后，回到<code>Identity</code>处，分别点击<code>Services</code>，<code>Git Gateway</code>，<code>Enable Git Gateway</code></li>\n</ul>\n<h2 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h2><ul>\n<li>完成了以上操作后，在你的博客地址后面加入<code>/admin</code>，就可以进入到cms的页面了，通过GitHub账号或者你邀请的email账户进行登录后，即可进行在线的博客文章编写了。<img src=\"https://raw.gitmirror.com/rimdl/pic/master/20240111202616.png\" alt=\"pic6\"></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clrf1or0j00018cfb865x1clw","category_id":"clrf1or0n00038cfb5gwc68wq","_id":"clrf1or0s000a8cfb6n5n0xl7"},{"post_id":"clrf1or1p000h8cfb6gb0g32v","category_id":"clrf1or0n00038cfb5gwc68wq","_id":"clrf1or1r000k8cfb7ygfei3y"},{"post_id":"clrf1or1n000d8cfbbvug0l25","category_id":"clrf1or1o000f8cfb5aziahz7","_id":"clrf1or1r000n8cfb3hlf0jmv"},{"post_id":"clrf1or1o000e8cfbc33n753q","category_id":"clrf1or1r000j8cfb1jg31yzp","_id":"clrf1or1r000p8cfbbzjbh5r3"}],"PostTag":[{"post_id":"clrf1or0j00018cfb865x1clw","tag_id":"clrf1or0p00048cfbae79fzyg","_id":"clrf1or0s000b8cfbaa771rhv"},{"post_id":"clrf1or0j00018cfb865x1clw","tag_id":"clrf1or0r00088cfb0sfwa0jw","_id":"clrf1or0s000c8cfbcxor96c0"},{"post_id":"clrf1or1n000d8cfbbvug0l25","tag_id":"clrf1or0r00088cfb0sfwa0jw","_id":"clrf1or1p000g8cfb50q5awht"},{"post_id":"clrf1or1o000e8cfbc33n753q","tag_id":"clrf1or1q000i8cfb2nvb3an7","_id":"clrf1or1r000m8cfbcrda53nq"},{"post_id":"clrf1or1p000h8cfb6gb0g32v","tag_id":"clrf1or0p00048cfbae79fzyg","_id":"clrf1or1r000o8cfb5n4qc5eq"},{"post_id":"clrf1or1p000h8cfb6gb0g32v","tag_id":"clrf1or1r000l8cfb12fj6j0r","_id":"clrf1or1r000q8cfb5zbj4psw"}],"Tag":[{"name":"hexo","_id":"clrf1or0p00048cfbae79fzyg"},{"name":"github","_id":"clrf1or0r00088cfb0sfwa0jw"},{"name":"Docker","_id":"clrf1or1q000i8cfb2nvb3an7"},{"name":"netlify","_id":"clrf1or1r000l8cfb12fj6j0r"}]}}